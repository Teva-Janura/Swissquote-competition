#!/usr/bin/env python
# coding: utf-8

# In[33]:


Tiger = {
    "dec_31_24": [
        {"t": "MSFT", "p": 8.51, "c": None},
        {"t": "APO", "p": 7.66, "c": -0.10},
        {"t": "GOOGL", "p": 7.38, "c": None},
        {"t": "SE", "p": 6.43, "c": None},
        {"t": "AMZN", "p": 5.32, "c": None},
        {"t": "NVDA", "p": 4.91, "c": None},
        {"t": "TTWO", "p": 4.06, "c": None},
        {"t": "LLY", "p": 3.82, "c": 35.08},
        {"t": "FLUT", "p": 3.30, "c": None},
        {"t": "TSM", "p": 2.71, "c": None},
        {"t": "NOW", "p": 2.32, "c": None},
        {"t": "SPOT", "p": 2.13, "c": 49156.58},
        {"t": "META", "p": 16.52, "c": None},
        {"t": "WDAY", "p": 1.83, "c": None},
        {"t": "GRAB", "p": 1.66, "c": None},
        {"t": "AVGO", "p": 1.62, "c": None},
        {"t": "CPAY", "p": 1.60, "c": None},
        {"t": "DASH", "p": 1.39, "c": None},
        {"t": "SHW", "p": 1.29, "c": 90.28},
        {"t": "RDDT", "p": 1.25, "c": 306.20},
        {"t": "CRWD", "p": 1.16, "c": None},
        {"t": "QCOM", "p": 1.08, "c": None},
        {"t": "LRCX", "p": 1.08, "c": 12.06},
        {"t": "ZS", "p": 0.99, "c": "New"},
        {"t": "PDD", "p": 0.96, "c": "New"},
        {"t": "FWONK", "p": 0.94, "c": 9.16},
        {"t": "CSGP", "p": 0.88, "c": "New"},
        {"t": "UNH", "p": 0.84, "c": -81.45},
        {"t": "CPNG", "p": 0.67, "c": 307.21},
        {"t": "PCOR", "p": 0.66, "c": None},
        {"t": "ESTC", "p": 0.63, "c": None},
        {"t": "UBER", "p": 0.59, "c": None},
        {"t": "AMAT", "p": 0.55, "c": None},
        {"t": "DDOG", "p": 0.53, "c": None},
        {"t": "TTAN", "p": 0.51, "c": "New"},
        {"t": "NVO", "p": 0.41, "c": None},
        {"t": "TEAM", "p": 0.37, "c": None},
        {"t": "NU", "p": 0.35, "c": -51.83},
        {"t": "VEEV", "p": 0.30, "c": "New"},
        {"t": "OKLO", "p": 0.25, "c": None},
        {"t": "ARM", "p": 0.14, "c": None},
        {"t": "RERE", "p": 0.13, "c": None},
        {"t": "ZKH", "p": 0.11, "c": None},
        {"t": "RBRK", "p": 0.06, "c": None},
        {"t": "JD", "p": 0.05, "c": None},
        {"t": "SARO", "p": 0.02, "c": "New"},
        {"t": "PONY", "p": 0.02, "c": "New"},
        {"t": "KVYO", "p": 0.01, "c": None},
        {"t": "DDL", "p": 0.00, "c": None},
        {"t": "ZI", "p": 0.00, "c": -100.00},
        {"t": "TOST", "p": 0.00, "c": -100.00},
        {"t": "STNE", "p": 0.00, "c": -100.00}
    ],
    
    "sep_30_24": [
        {"t": "MSFT", "p": 9.81, "c": None},
        {"t": "GOOGL", "p": 7.29, "c": None},
        {"t": "APO", "p": 6.55, "c": None},
        {"t": "SE", "p": 6.45, "c": None},
        {"t": "UNH", "p": 5.90, "c": 0.76},
        {"t": "AMZN", "p": 5.10, "c": 1.49},
        {"t": "NVDA", "p": 5.02, "c": None},
        {"t": "TTWO", "p": 3.83, "c": 3.47},
        {"t": "LLY", "p": 3.67, "c": 4.28},
        {"t": "FLUT", "p": 3.42, "c": "New"},
        {"t": "TSM", "p": 2.69, "c": 18.37},
        {"t": "NOW", "p": 2.21, "c": None},
        {"t": "META", "p": 18.23, "c": None},
        {"t": "WDAY", "p": 1.96, "c": None},
        {"t": "CPAY", "p": 1.66, "c": 19.20},
        {"t": "GRAB", "p": 1.51, "c": None},
        {"t": "AVGO", "p": 1.36, "c": 1.23},
        {"t": "QCOM", "p": 1.35, "c": None},
        {"t": "DASH", "p": 1.34, "c": None},
        {"t": "LRCX", "p": 1.23, "c": None},
        {"t": "CRWD", "p": 1.08, "c": None},
        {"t": "NU", "p": 1.07, "c": None},
        {"t": "SHW", "p": 0.86, "c": "New"},
        {"t": "UBER", "p": 0.83, "c": -13.60},
        {"t": "FWONK", "p": 0.81, "c": 3.93},
        {"t": "AMAT", "p": 0.77, "c": None},
        {"t": "NVO", "p": 0.64, "c": None},
        {"t": "PCOR", "p": 0.62, "c": None},
        {"t": "ESTC", "p": 0.55, "c": None},
        {"t": "DDOG", "p": 0.48, "c": None},
        {"t": "ZI", "p": 0.41, "c": None},
        {"t": "TEAM", "p": 0.27, "c": None},
        {"t": "CPNG", "p": 0.21, "c": "New"},
        {"t": "ARM", "p": 0.18, "c": None},
        {"t": "RERE", "p": 0.14, "c": None},
        {"t": "RDDT", "p": 0.14, "c": None},
        {"t": "ZKH", "p": 0.13, "c": None},
        {"t": "OKLO", "p": 0.11, "c": None},
        {"t": "JD", "p": 0.06, "c": -58.15},
        {"t": "RBRK", "p": 0.03, "c": None},
        {"t": "TOST", "p": 0.01, "c": None},
        {"t": "KVYO", "p": 0.01, "c": None},
        {"t": "STNE", "p": 0.00, "c": -97.98},
        {"t": "SPOT", "p": 0.00, "c": None},
        {"t": "DDL", "p": 0.00, "c": None},
        {"t": "DXCM", "p": 0.00, "c": -100.00},
        {"t": "ALAB", "p": 0.00, "c": -100.00}
    ],
    
    "jun_30_24": [
        {"t": "JD", "p": 0.10, "c": -73.79},
        {"t": "ZI", "p": 0.55, "c": -19.22},
        {"t": "CART", "p": 0.00, "c": -100.00},
        {"t": "CPAY", "p": 1.29, "c": -21.53},
        {"t": "FRSH", "p": 0.00, "c": -100.00},
        {"t": "RERE", "p": 0.13, "c": None},
        {"t": "SPOT", "p": 0.00, "c": None},
        {"t": "STNE", "p": 0.04, "c": None},
        {"t": "ESTC", "p": 0.89, "c": None},
        {"t": "UBER", "p": 1.01, "c": None},
        {"t": "CRWD", "p": 1.59, "c": None},
        {"t": "DDOG", "p": 0.59, "c": None},
        {"t": "DASH", "p": 1.10, "c": None},
        {"t": "PCOR", "p": 0.72, "c": None},
        {"t": "MSFT", "p": 11.04, "c": None},
        {"t": "DDL", "p": 0.00, "c": None},
        {"t": "OKLO", "p": 0.12, "c": None},
        {"t": "TOST", "p": 0.01, "c": None},
        {"t": "NU", "p": 1.10, "c": None},
        {"t": "ARM", "p": 0.23, "c": None},
        {"t": "KVYO", "p": 0.00, "c": None},
        {"t": "ALAB", "p": 0.02, "c": None},
        {"t": "RDDT", "p": 0.15, "c": None},
        {"t": "TEAM", "p": 0.33, "c": None},
        {"t": "NVDA", "p": 5.53, "c": None},
        {"t": "LRCX", "p": 1.74, "c": None},
        {"t": "AMZN", "p": 5.65, "c": None},
        {"t": "TTWO", "p": 4.06, "c": None},
        {"t": "GOOGL", "p": 8.68, "c": None},
        {"t": "NVO", "p": 0.84, "c": None},
        {"t": "DXCM", "p": 0.60, "c": None},
        {"t": "AVGO", "p": 1.35, "c": None},
        {"t": "APO", "p": 6.71, "c": None},
        {"t": "META", "p": 17.41, "c": None},
        {"t": "NOW", "p": 2.11, "c": None},
        {"t": "WDAY", "p": 1.94, "c": None},
        {"t": "FWONK", "p": 0.79, "c": None},
        {"t": "TSM", "p": 2.47, "c": 0.85},
        {"t": "LLY", "p": 3.89, "c": 4.49},
        {"t": "RBRK", "p": 0.04, "c": "New"},
        {"t": "AMAT", "p": 0.98, "c": "New"},
        {"t": "SE", "p": 5.30, "c": 6.97},
        {"t": "QCOM", "p": 1.71, "c": "New"},
        {"t": "UNH", "p": 5.53, "c": "New"},
        {"t": "ZKH", "p": 0.15, "c": "New"},
        {"t": "GRAB", "p": 1.53, "c": 39.10}
    ],
    
    "mar_31_24": [
        {"t": "JD", "p": 0.47, "c": -64.35},
        {"t": "NU", "p": 1.20, "c": -10.53},
        {"t": "TOST", "p": 0.01, "c": -92.83},
        {"t": "PDD", "p": 0.00, "c": -100.00},
        {"t": "FRSH", "p": 0.02, "c": -72.95},
        {"t": "LRCX", "p": 1.88, "c": -12.36},
        {"t": "WDAY", "p": 2.80, "c": -5.10},
        {"t": "UBER", "p": 1.27, "c": -1.31},
        {"t": "DASH", "p": 1.65, "c": None},
        {"t": "SPOT", "p": 0.00, "c": None},
        {"t": "STNE", "p": 0.06, "c": None},
        {"t": "ESTC", "p": 0.93, "c": None},
        {"t": "CRWD", "p": 1.58, "c": None},
        {"t": "DDOG", "p": 0.66, "c": None},
        {"t": "LLY", "p": 3.78, "c": None},
        {"t": "RERE", "p": 0.11, "c": None},
        {"t": "DDL", "p": 0.00, "c": None},
        {"t": "OKLO", "p": 0.19, "c": None},
        {"t": "ARM", "p": 0.20, "c": None},
        {"t": "KVYO", "p": 0.00, "c": None},
        {"t": "TEAM", "p": 0.43, "c": None},
        {"t": "MSFT", "p": 12.29, "c": None},
        {"t": "NVDA", "p": 4.78, "c": None},
        {"t": "NVO", "p": 0.89, "c": None},
        {"t": "DXCM", "p": 0.87, "c": None},
        {"t": "TSM", "p": 2.26, "c": None},
        {"t": "AVGO", "p": 1.32, "c": None},
        {"t": "APO", "p": 7.55, "c": None},
        {"t": "META", "p": 19.81, "c": None},
        {"t": "NOW", "p": 2.42, "c": None},
        {"t": "CPAY", "p": 2.25, "c": 2.30},
        {"t": "ALAB", "p": 0.03, "c": "New"},
        {"t": "TTWO", "p": 4.58, "c": 9.45},
        {"t": "RDDT", "p": 0.13, "c": "New"},
        {"t": "SE", "p": 4.40, "c": 4.72},
        {"t": "PCOR", "p": 1.05, "c": 46.17},
        {"t": "AMZN", "p": 6.23, "c": 29.46},
        {"t": "CART", "p": 0.36, "c": 905.32},
        {"t": "FWONK", "p": 0.85, "c": "New"},
        {"t": "ZI", "p": 1.02, "c": 62.02},
        {"t": "GOOGL", "p": 8.50, "c": 154.10},
        {"t": "GRAB", "p": 1.15, "c": 30.21}
    ]
}


# In[34]:


Coatue = {
    "dec_31_24": [
        {"t": "AMZN", "p": 7.89, "c": -5.31},
        {"t": "META", "p": 7.27, "c": -0.21},
        {"t": "TSM", "p": 6.63, "c": 6.37},
        {"t": "MSFT", "p": 5.01, "c": -8.48},
        {"t": "CEG", "p": 5.00, "c": -14.08},
        {"t": "ETN", "p": 4.98, "c": -4.07},
        {"t": "NVDA", "p": 4.53, "c": -1.30},
        {"t": "GEV", "p": 4.28, "c": -1.99},
        {"t": "RDDT", "p": 3.60, "c": "New"},
        {"t": "TSLA", "p": 2.96, "c": -2.80},
        {"t": "TEAM", "p": 2.90, "c": 612.67},
        {"t": "NU", "p": 2.78, "c": 27.02},
        {"t": "AVGO", "p": 2.75, "c": -18.43},
        {"t": "ADBE", "p": 2.64, "c": 4.72},
        {"t": "APP", "p": 2.51, "c": 15.27},
        {"t": "VRT", "p": 2.44, "c": -17.37},
        {"t": "PYPL", "p": 2.29, "c": -3.40},
        {"t": "NFLX", "p": 2.09, "c": 13.59},
        {"t": "GOOGL", "p": 2.07, "c": -12.08},
        {"t": "SPOT", "p": 1.91, "c": 66.83},
        {"t": "AMD", "p": 1.73, "c": None},
        {"t": "ISRG", "p": 1.71, "c": -11.09},
        {"t": "FCNCA", "p": 1.56, "c": 17.89},
        {"t": "DASH", "p": 1.47, "c": 32.36},
        {"t": "VST", "p": 1.38, "c": 4.91},
        {"t": "KKR", "p": 1.33, "c": -2.11},
        {"t": "NOW", "p": 1.32, "c": "New"},
        {"t": "INTU", "p": 1.16, "c": 9.50},
        {"t": "SCHW", "p": 1.12, "c": "New"},
        {"t": "LRCX", "p": 0.98, "c": None},
        {"t": "SHOP", "p": 0.91, "c": None},
        {"t": "SMCI", "p": 0.91, "c": "New"},
        {"t": "HUBS", "p": 0.88, "c": "New"},
        {"t": "CDNS", "p": 0.81, "c": -39.55},
        {"t": "QCOM", "p": 0.64, "c": None},
        {"t": "UBER", "p": 0.59, "c": None},
        {"t": "LLY", "p": 0.56, "c": -13.70},
        {"t": "AFRM", "p": 0.54, "c": "New"},
        {"t": "DPZ", "p": 0.46, "c": None},
        {"t": "DOCU", "p": 0.41, "c": -5.57},
        {"t": "OKTA", "p": 0.33, "c": "New"},
        {"t": "DDOG", "p": 0.32, "c": "New"},
        {"t": "DELL", "p": 0.30, "c": None},
        {"t": "GOOG", "p": 0.26, "c": -39.20},
        {"t": "SE", "p": 0.24, "c": None},
        {"t": "MNDY", "p": 0.23, "c": "New"},
        {"t": "TTAN", "p": 0.22, "c": "New"},
        {"t": "PWR", "p": 0.14, "c": None},
        {"t": "PATH", "p": 0.10, "c": None},
        {"t": "PARA", "p": 0.09, "c": -27.17},
        {"t": "Z", "p": 0.09, "c": -50.00},
        {"t": "BEKE", "p": 0.08, "c": -20.81},
        {"t": "ZG", "p": 0.08, "c": -34.03},
        {"t": "UPST", "p": 0.07, "c": -59.92},
        {"t": "JD", "p": 0.07, "c": -92.55},
        {"t": "NVCR", "p": 0.06, "c": None},
        {"t": "PDD", "p": 0.06, "c": -92.86},
        {"t": "HCP", "p": 0.06, "c": None},
        {"t": "BABA", "p": 0.06, "c": -92.90},
        {"t": "FUTU", "p": 0.04, "c": "New"},
        {"t": "KWEB", "p": 0.03, "c": -95.84},
        {"t": "MRNA", "p": 0.03, "c": "New"},
        {"t": "LX", "p": 0.02, "c": "New"},
        {"t": "CPNG", "p": 0.01, "c": "New"},
        {"t": "API", "p": 0.01, "c": None},
        {"t": "QFIN", "p": 0.01, "c": "New"},
        {"t": "SEDG", "p": 0.00, "c": None},
        {"t": "HTZWW", "p": 0.00, "c": -72.76},
        {"t": "NVO", "p": 0.00, "c": -100.00},
        {"t": "FXI", "p": 0.00, "c": -100.00},
        {"t": "BZ", "p": 0.00, "c": -100.00},
        {"t": "HTZ", "p": 0.00, "c": -100.00},
        {"t": "AMC", "p": 0.00, "c": -100.00},
        {"t": "LCID", "p": 0.00, "c": -100.00},
        {"t": "MPW", "p": 0.00, "c": -100.00},
        {"t": "GNRC", "p": 0.00, "c": -100.00},
        {"t": "NTES", "p": 0.00, "c": -100.00},
        {"t": "ENPH", "p": 0.00, "c": -100.00},
        {"t": "EDU", "p": 0.00, "c": -100.00},
        {"t": "NEE", "p": 0.00, "c": -100.00},
        {"t": "NKLA", "p": 0.00, "c": -100.00},
        {"t": "NVAX", "p": 0.00, "c": -100.00},
        {"t": "RNG", "p": 0.00, "c": -100.00},
        {"t": "OLPX", "p": 0.00, "c": -100.00},
        {"t": "BYND", "p": 0.00, "c": -100.00},
        {"t": "BX", "p": 0.00, "c": -100.00},
        {"t": "PTON", "p": 0.00, "c": -100.00},
        {"t": "PINS", "p": 0.00, "c": -100.00},
        {"t": "PLUG", "p": 0.00, "c": -100.00},
        {"t": "QS", "p": 0.00, "c": -100.00},
        {"t": "TAL", "p": 0.00, "c": -100.00},
        {"t": "CHPT", "p": 0.00, "c": -100.00},
        {"t": "SMCI", "p": 0.00, "c": -100.00},
        {"t": "SFIX", "p": 0.00, "c": -100.00},
        {"t": "CMG", "p": 0.00, "c": -100.00},
        {"t": "RMD", "p": 0.00, "c": -100.00}
    ],
    
    "sep_30_24": [
        {"t": "META", "p": 7.86, "c": -11.67},
        {"t": "AMZN", "p": 7.80, "c": 4.61},
        {"t": "CEG", "p": 7.46, "c": 57.42},
        {"t": "MSFT", "p": 6.16, "c": 4.08},
        {"t": "TSM", "p": 6.04, "c": -17.80},
        {"t": "ETN", "p": 5.71, "c": 8.51},
        {"t": "NVDA", "p": 4.57, "c": -26.29},
        {"t": "GEV", "p": 3.74, "c": 18.34},
        {"t": "ADBE", "p": 3.24, "c": -8.66},
        {"t": "NU", "p": 3.18, "c": 6.19},
        {"t": "VRT", "p": 2.85, "c": -14.67},
        {"t": "AVGO", "p": 2.77, "c": 52.52},
        {"t": "AMD", "p": 2.59, "c": -32.33},
        {"t": "PYPL", "p": 2.39, "c": 36.15},
        {"t": "GOOGL", "p": 2.27, "c": 33.20},
        {"t": "TSLA", "p": 2.17, "c": 36.37},
        {"t": "ISRG", "p": 2.00, "c": 6.54},
        {"t": "NFLX", "p": 1.61, "c": None},
        {"t": "CDNS", "p": 1.34, "c": "New"},
        {"t": "KKR", "p": 1.32, "c": "New"},
        {"t": "PDD", "p": 1.30, "c": 740.93},
        {"t": "FCNCA", "p": 1.27, "c": -10.85},
        {"t": "VST", "p": 1.25, "c": -29.02},
        {"t": "LRCX", "p": 1.23, "c": -11.54},
        {"t": "JD", "p": 1.23, "c": 33490.10},
        {"t": "INTU", "p": 1.15, "c": None},
        {"t": "BABA", "p": 1.07, "c": 895.46},
        {"t": "SPOT", "p": 1.04, "c": "New"},
        {"t": "DASH", "p": 1.04, "c": "New"},
        {"t": "CMG", "p": 0.98, "c": "New"},
        {"t": "APP", "p": 0.97, "c": -12.88},
        {"t": "KWEB", "p": 0.92, "c": "New"},
        {"t": "LLY", "p": 0.82, "c": 19.76},
        {"t": "UBER", "p": 0.81, "c": -27.98},
        {"t": "QCOM", "p": 0.78, "c": -76.53},
        {"t": "SHOP", "p": 0.76, "c": -31.48},
        {"t": "FXI", "p": 0.58, "c": "New"},
        {"t": "DPZ", "p": 0.52, "c": -9.54},
        {"t": "RMD", "p": 0.43, "c": "New"},
        {"t": "GOOG", "p": 0.41, "c": 7.51},
        {"t": "ENPH", "p": 0.40, "c": None},
        {"t": "NEE", "p": 0.36, "c": 7.08},
        {"t": "DELL", "p": 0.34, "c": -89.50},
        {"t": "GNRC", "p": 0.33, "c": None},
        {"t": "DOCU", "p": 0.33, "c": None},
        {"t": "TEAM", "p": 0.29, "c": "New"},
        {"t": "SE", "p": 0.24, "c": None},
        {"t": "PINS", "p": 0.20, "c": None},
        {"t": "Z", "p": 0.18, "c": None},
        {"t": "PWR", "p": 0.15, "c": 8.73},
        {"t": "PARA", "p": 0.15, "c": None},
        {"t": "NVO", "p": 0.14, "c": 892.11},
        {"t": "UPST", "p": 0.13, "c": None},
        {"t": "PATH", "p": 0.12, "c": None},
        {"t": "BEKE", "p": 0.11, "c": -17.17},
        {"t": "BX", "p": 0.11, "c": "New"},
        {"t": "ZG", "p": 0.11, "c": None},
        {"t": "NVAX", "p": 0.10, "c": -15.26},
        {"t": "QS", "p": 0.10, "c": None},
        {"t": "HCP", "p": 0.06, "c": None},
        {"t": "MPW", "p": 0.05, "c": None},
        {"t": "RNG", "p": 0.05, "c": None},
        {"t": "PTON", "p": 0.04, "c": None},
        {"t": "LCID", "p": 0.04, "c": None},
        {"t": "SMCI", "p": 0.04, "c": "New"},
        {"t": "NVCR", "p": 0.04, "c": None},
        {"t": "NTES", "p": 0.03, "c": "New"},
        {"t": "PLUG", "p": 0.02, "c": None},
        {"t": "TAL", "p": 0.02, "c": "New"},
        {"t": "EDU", "p": 0.02, "c": "New"},
        {"t": "BZ", "p": 0.02, "c": 53.31},
        {"t": "CHPT", "p": 0.02, "c": None},
        {"t": "OLPX", "p": 0.01, "c": None},
        {"t": "BYND", "p": 0.01, "c": None},
        {"t": "SFIX", "p": 0.01, "c": None},
        {"t": "HTZWW", "p": 0.01, "c": None},
        {"t": "API", "p": 0.00, "c": None},
        {"t": "AMC", "p": 0.00, "c": None},
        {"t": "SEDG", "p": 0.00, "c": None},
        {"t": "NKLA", "p": 0.00, "c": None},
        {"t": "HTZ", "p": 0.00, "c": None},
        {"t": "CRWD", "p": 0.00, "c": -100.00},
        {"t": "ASML", "p": 0.00, "c": -100.00},
        {"t": "APH", "p": 0.00, "c": -100.00},
        {"t": "CRM", "p": 0.00, "c": -100.00},
        {"t": "EQIX", "p": 0.00, "c": -100.00},
        {"t": "UNH", "p": 0.00, "c": -100.00},
        {"t": "FSLR", "p": 0.00, "c": -100.00}
    ],
    
    "jun_30_24": [
        {"t": "META", "p": 8.21, "c": -3.10},
        {"t": "AMZN", "p": 8.10, "c": 6.97},
        {"t": "TSM", "p": 7.71, "c": 10.19},
        {"t": "NVDA", "p": 6.61, "c": -0.70},
        {"t": "MSFT", "p": 6.44, "c": 0.56},
        {"t": "ETN", "p": 5.22, "c": 3.05},
        {"t": "QCOM", "p": 4.07, "c": 43.13},
        {"t": "ADBE", "p": 3.99, "c": 28.83},
        {"t": "AMD", "p": 3.97, "c": -7.41},
        {"t": "DELL", "p": 3.93, "c": 73.23},
        {"t": "CEG", "p": 3.83, "c": 139.44},
        {"t": "VRT", "p": 3.05, "c": -2.19},
        {"t": "NU", "p": 2.97, "c": -5.84},
        {"t": "GEV", "p": 2.22, "c": "New"},
        {"t": "GOOGL", "p": 1.96, "c": -38.27},
        {"t": "CRM", "p": 1.91, "c": -59.41},
        {"t": "LRCX", "p": 1.90, "c": 2.91},
        {"t": "ISRG", "p": 1.78, "c": -19.61},
        {"t": "AVGO", "p": 1.77, "c": -31.94},
        {"t": "APH", "p": 1.63, "c": "New"},
        {"t": "NFLX", "p": 1.61, "c": -42.07},
        {"t": "PYPL", "p": 1.37, "c": -24.57},
        {"t": "FCNCA", "p": 1.37, "c": -27.25},
        {"t": "VST", "p": 1.33, "c": 23.90},
        {"t": "INTU", "p": 1.28, "c": -2.95},
        {"t": "TSLA", "p": 1.26, "c": -35.98},
        {"t": "UBER", "p": 1.14, "c": None},
        {"t": "EQIX", "p": 1.05, "c": -13.23},
        {"t": "SHOP", "p": 0.96, "c": 1.83},
        {"t": "APP", "p": 0.74, "c": 98.40},
        {"t": "LLY", "p": 0.73, "c": -15.18},
        {"t": "DPZ", "p": 0.72, "c": -43.89},
        {"t": "CRWD", "p": 0.71, "c": None},
        {"t": "ASML", "p": 0.45, "c": -38.66},
        {"t": "GOOG", "p": 0.44, "c": -47.36},
        {"t": "ENPH", "p": 0.37, "c": -2.88},
        {"t": "DOCU", "p": 0.30, "c": -68.61},
        {"t": "NEE", "p": 0.29, "c": 36.06},
        {"t": "GNRC", "p": 0.29, "c": 17.36},
        {"t": "PINS", "p": 0.29, "c": 5.27},
        {"t": "UNH", "p": 0.19, "c": "New"},
        {"t": "SE", "p": 0.19, "c": None},
        {"t": "PDD", "p": 0.16, "c": -65.90},
        {"t": "PARA", "p": 0.15, "c": "New"},
        {"t": "Z", "p": 0.13, "c": 5.34},
        {"t": "NVAX", "p": 0.13, "c": 72.74},
        {"t": "PWR", "p": 0.12, "c": -36.17},
        {"t": "PATH", "p": 0.12, "c": None},
        {"t": "BEKE", "p": 0.10, "c": -50.59},
        {"t": "QS", "p": 0.09, "c": None},
        {"t": "ZG", "p": 0.08, "c": 5.17},
        {"t": "UPST", "p": 0.08, "c": None},
        {"t": "BABA", "p": 0.08, "c": -10.41},
        {"t": "HCP", "p": 0.07, "c": None},
        {"t": "RNG", "p": 0.05, "c": None},
        {"t": "MPW", "p": 0.04, "c": -36.52},
        {"t": "NVCR", "p": 0.04, "c": None},
        {"t": "PTON", "p": 0.03, "c": None},
        {"t": "FSLR", "p": 0.03, "c": "New"},
        {"t": "LCID", "p": 0.03, "c": None},
        {"t": "PLUG", "p": 0.02, "c": -24.23},
        {"t": "NVO", "p": 0.02, "c": -89.29},
        {"t": "CHPT", "p": 0.02, "c": None},
        {"t": "SFIX", "p": 0.01, "c": 30.87},
        {"t": "BZ", "p": 0.01, "c": -61.30},
        {"t": "BYND", "p": 0.01, "c": None},
        {"t": "OLPX", "p": 0.01, "c": None},
        {"t": "HTZWW", "p": 0.01, "c": None},
        {"t": "NKLA", "p": 0.01, "c": 0.10},
        {"t": "AMC", "p": 0.00, "c": None},
        {"t": "SEDG", "p": 0.00, "c": "New"},
        {"t": "API", "p": 0.00, "c": 23.25},
        {"t": "JD", "p": 0.00, "c": -94.67},
        {"t": "HTZ", "p": 0.00, "c": None},
        {"t": "BIDU", "p": 0.00, "c": -100.00},
        {"t": "ON", "p": 0.00, "c": -100.00},
        {"t": "CART", "p": 0.00, "c": -100.00},
        {"t": "XYZ", "p": 0.00, "c": -100.00},
        {"t": "BURL", "p": 0.00, "c": -100.00},
        {"t": "CROX", "p": 0.00, "c": -100.00},
        {"t": "KWEB", "p": 0.00, "c": -100.00},
        {"t": "NOW", "p": 0.00, "c": -100.00},
        {"t": "GM", "p": 0.00, "c": -100.00},
        {"t": "MNDY", "p": 0.00, "c": -100.00},
        {"t": "DHR", "p": 0.00, "c": -100.00},
        {"t": "DKNG", "p": 0.00, "c": -100.00},
        {"t": "FXI", "p": 0.00, "c": -100.00},
        {"t": "DASH", "p": 0.00, "c": -100.00},
        {"t": "AI", "p": 0.00, "c": -100.00},
        {"t": "PLTR", "p": 0.00, "c": -100.00},
        {"t": "TAL", "p": 0.00, "c": -100.00},
        {"t": "TCOM", "p": 0.00, "c": -100.00},
        {"t": "TME", "p": 0.00, "c": -100.00},
        {"t": "LI", "p": 0.00, "c": -100.00},
        {"t": "NXPI", "p": 0.00, "c": -100.00},
        {"t": "HTHT", "p": 0.00, "c": -100.00},
        {"t": "NTES", "p": 0.00, "c": -100.00}
    ],
    
    "mar_31_24": [
        {"t": "META", "p": 8.22, "c": -23.33},
        {"t": "AMZN", "p": 7.12, "c": 2.46},
        {"t": "MSFT", "p": 6.07, "c": -3.44},
        {"t": "CRM", "p": 5.55, "c": 119.25},
        {"t": "TSM", "p": 5.52, "c": 3209.17},
        {"t": "ETN", "p": 5.09, "c": 4.06},
        {"t": "NVDA", "p": 4.91, "c": -67.95},
        {"t": "AMD", "p": 4.80, "c": -45.68},
        {"t": "VRT", "p": 2.96, "c": -33.06},
        {"t": "NU", "p": 2.94, "c": -0.33},
        {"t": "ADBE", "p": 2.83, "c": -2.99},
        {"t": "GOOGL", "p": 2.65, "c": 138.07},
        {"t": "NFLX", "p": 2.52, "c": -53.66},
        {"t": "QCOM", "p": 2.43, "c": "New"},
        {"t": "AVGO", "p": 2.17, "c": "New"},
        {"t": "PYPL", "p": 2.11, "c": 29498.52},
        {"t": "ISRG", "p": 2.00, "c": -1.85},
        {"t": "DELL", "p": 1.89, "c": "New"},
        {"t": "FCNCA", "p": 1.84, "c": -16.04},
        {"t": "TSLA", "p": 1.76, "c": -36.92},
        {"t": "LRCX", "p": 1.69, "c": -34.74},
        {"t": "CART", "p": 1.50, "c": None},
        {"t": "CEG", "p": 1.49, "c": "New"},
        {"t": "EQIX", "p": 1.33, "c": -26.72},
        {"t": "INTU", "p": 1.31, "c": -33.16},
        {"t": "DPZ", "p": 1.24, "c": -18.85},
        {"t": "UBER", "p": 1.22, "c": None},
        {"t": "SHOP", "p": 1.11, "c": -37.23},
        {"t": "DOCU", "p": 1.06, "c": -6.56},
        {"t": "VST", "p": 0.88, "c": "New"},
        {"t": "XYZ", "p": 0.76, "c": 327.10},
        {"t": "LLY", "p": 0.74, "c": 14.42},
        {"t": "BURL", "p": 0.73, "c": 101.62},
        {"t": "ASML", "p": 0.70, "c": "New"},
        {"t": "GOOG", "p": 0.70, "c": 247.34},
        {"t": "CRWD", "p": 0.60, "c": None},
        {"t": "NOW", "p": 0.48, "c": -33.25},
        {"t": "ENPH", "p": 0.47, "c": "New"},
        {"t": "PLTR", "p": 0.43, "c": 39.71},
        {"t": "PDD", "p": 0.41, "c": 22.20},
        {"t": "DKNG", "p": 0.41, "c": "New"},
        {"t": "DHR", "p": 0.33, "c": -44.04},
        {"t": "APP", "p": 0.31, "c": None},
        {"t": "GM", "p": 0.28, "c": -3.07},
        {"t": "LI", "p": 0.26, "c": "New"},
        {"t": "KWEB", "p": 0.24, "c": 40.10},
        {"t": "GNRC", "p": 0.24, "c": 102.24},
        {"t": "AI", "p": 0.22, "c": -26.41},
        {"t": "PINS", "p": 0.22, "c": 10.63},
        {"t": "PATH", "p": 0.22, "c": 8.04},
        {"t": "BEKE", "p": 0.20, "c": -24.24},
        {"t": "PWR", "p": 0.20, "c": "New"},
        {"t": "NEE", "p": 0.20, "c": 44.87},
        {"t": "FXI", "p": 0.20, "c": "New"},
        {"t": "NXPI", "p": 0.18, "c": 9.70},
        {"t": "DASH", "p": 0.17, "c": "New"},
        {"t": "ON", "p": 0.16, "c": 154.35},
        {"t": "NVO", "p": 0.15, "c": -1.25},
        {"t": "SE", "p": 0.14, "c": "New"},
        {"t": "Z", "p": 0.13, "c": 19.08},
        {"t": "MNDY", "p": 0.13, "c": "New"},
        {"t": "QS", "p": 0.11, "c": 36.14},
        {"t": "UPST", "p": 0.09, "c": 27.18},
        {"t": "BABA", "p": 0.09, "c": 92.91},
        {"t": "ZG", "p": 0.09, "c": 146.97},
        {"t": "MPW", "p": 0.07, "c": -41.58},
        {"t": "TCOM", "p": 0.06, "c": -34.47},
        {"t": "RNG", "p": 0.06, "c": "New"},
        {"t": "HCP", "p": 0.05, "c": 148.74},
        {"t": "JD", "p": 0.05, "c": 2701.72},
        {"t": "PLUG", "p": 0.05, "c": "New"},
        {"t": "NTES", "p": 0.04, "c": -81.52},
        {"t": "PTON", "p": 0.04, "c": "New"},
        {"t": "TAL", "p": 0.04, "c": -20.02},
        {"t": "NVCR", "p": 0.04, "c": 74.85},
        {"t": "TME", "p": 0.04, "c": 371.97},
        {"t": "BIDU", "p": 0.03, "c": 1351.47},
        {"t": "LCID", "p": 0.03, "c": "New"},
        {"t": "BZ", "p": 0.03, "c": 5.72},
        {"t": "NVAX", "p": 0.03, "c": None},
        {"t": "HTHT", "p": 0.02, "c": None},
        {"t": "CHPT", "p": 0.02, "c": "New"},
        {"t": "NKLA", "p": 0.02, "c": 329.45},
        {"t": "HTZWW", "p": 0.01, "c": 446.93},
        {"t": "BYND", "p": 0.01, "c": 133.21},
        {"t": "CROX", "p": 0.01, "c": -98.11},
        {"t": "OLPX", "p": 0.01, "c": 733.08},
        {"t": "SFIX", "p": 0.01, "c": 358.77},
        {"t": "API", "p": 0.00, "c": 28.29},
        {"t": "AMC", "p": 0.00, "c": "New"},
        {"t": "HTZ", "p": 0.00, "c": "New"},
        {"t": "ORCL", "p": 0.00, "c": -100.00},
        {"t": "UNH", "p": 0.00, "c": -100.00},
        {"t": "AAPL", "p": 0.00, "c": -100.00},
        {"t": "INTC", "p": 0.00, "c": -100.00},
        {"t": "DIS", "p": 0.00, "c": -100.00},
        {"t": "ALB", "p": 0.00, "c": -100.00},
        {"t": "AMAT", "p": 0.00, "c": -100.00},
        {"t": "CDNS", "p": 0.00, "c": -100.00},
        {"t": "SNPS", "p": 0.00, "c": -100.00},
        {"t": "ILMN", "p": 0.00, "c": -100.00},
        {"t": "F", "p": 0.00, "c": -100.00},
        {"t": "EDU", "p": 0.00, "c": -100.00},
        {"t": "IGV", "p": 0.00, "c": -100.00},
        {"t": "GME", "p": 0.00, "c": -100.00},
        {"t": "TAN", "p": 0.00, "c": -100.00},
        {"t": "CHTR", "p": 0.00, "c": -100.00},
        {"t": "ALLY", "p": 0.00, "c": -100.00},
        {"t": "UBS", "p": 0.00, "c": -100.00},
        {"t": "SEDG", "p": 0.00, "c": -100.00},
        {"t": "BILL", "p": 0.00, "c": -100.00},
        {"t": "ZTO", "p": 0.00, "c": -100.00},
        {"t": "BE", "p": 0.00, "c": -100.00},
        {"t": "MRNA", "p": 0.00, "c": -100.00},
        {"t": "FUTU", "p": 0.00, "c": -100.00},
        {"t": "ZI", "p": 0.00, "c": -100.00},
        {"t": "AFRM", "p": 0.00, "c": -100.00},
        {"t": "SYM", "p": 0.00, "c": -100.00},
        {"t": "CFLT", "p": 0.00, "c": -100.00},
        {"t": "VSCO", "p": 0.00, "c": -100.00},
        {"t": "RIVN", "p": 0.00, "c": -100.00}
    ]
}


# In[35]:


Third_Point = {
    "dec_31_24": [
        {"t": "PCG", "p": 13.15, "c": -2.51},
        {"t": "AMZN", "p": 10.17, "c": -6.76},
        {"t": "DHR", "p": 5.86, "c": -2.56},
        {"t": "META", "p": 5.23, "c": 22.02},
        {"t": "TSM", "p": 4.72, "c": None},
        {"t": "ICE", "p": 4.17, "c": None},
        {"t": "BN", "p": 3.85, "c": 5.61},
        {"t": "MSFT", "p": 3.40, "c": -31.03},
        {"t": "CRH", "p": 3.38, "c": 32.44},
        {"t": "FLUT", "p": 3.02, "c": 70.59},
        {"t": "LYV", "p": 2.99, "c": -26.50},
        {"t": "J", "p": 2.96, "c": -16.46},
        {"t": "LPLA", "p": 2.87, "c": 35.05},
        {"t": "FERG", "p": 2.80, "c": 24.35},
        {"t": "CPAY", "p": 2.77, "c": -20.26},
        {"t": "TDS", "p": 2.75, "c": 108.70},
        {"t": "TSLA", "p": 2.71, "c": 25.00},
        {"t": "TMO", "p": 2.45, "c": "New"},
        {"t": "COF", "p": 2.22, "c": "New"},
        {"t": "CRS", "p": 1.98, "c": 31.82},
        {"t": "FTV", "p": 1.91, "c": "New"},
        {"t": "VST", "p": 1.85, "c": -68.50},
        {"t": "EQT", "p": 1.83, "c": 51.28},
        {"t": "WDAY", "p": 1.73, "c": "New"},
        {"t": "CNK", "p": 1.56, "c": -46.43},
        {"t": "DFS", "p": 1.49, "c": "New"},
        {"t": "HES", "p": 1.12, "c": None},
        {"t": "APO+A", "p": 1.05, "c": None},
        {"t": "PRMB", "p": 0.99, "c": "New"},
        {"t": "APO", "p": 0.89, "c": -57.89},
        {"t": "GB", "p": 0.78, "c": None},
        {"t": "SDRL", "p": 0.54, "c": "New"},
        {"t": "SHCO", "p": 0.24, "c": "New"},
        {"t": "DEBT-PG&E PRN", "p": 0.15, "c": "New"},
        {"t": "HTZWW", "p": 0.11, "c": None},
        {"t": "PCG+X", "p": 0.09, "c": "New"},
        {"t": "AUR", "p": 0.09, "c": None},
        {"t": "FLYX", "p": 0.04, "c": None},
        {"t": "AUROW", "p": 0.03, "c": None},
        {"t": "NPWR.WS", "p": 0.02, "c": None},
        {"t": "CCO", "p": 0.02, "c": 5.88},
        {"t": "EGGF.WS", "p": 0.00, "c": None},
        {"t": "GB.WS", "p": 0.00, "c": None},
        {"t": "APH", "p": 0.00, "c": -100.00},
        {"t": "ANSS", "p": 0.00, "c": -100.00},
        {"t": "AAPL", "p": 0.00, "c": -100.00},
        {"t": "USM", "p": 0.00, "c": -100.00},
        {"t": "BBWI", "p": 0.00, "c": -100.00},
        {"t": "ROP", "p": 0.00, "c": -100.00},
        {"t": "CVS", "p": 0.00, "c": -100.00},
        {"t": "JWSWF", "p": 0.00, "c": -100.00},
        {"t": "HE", "p": 0.00, "c": -100.00}
    ],
    
    "sep_30_24": [
        {"t": "PCG", "p": 13.24, "c": -7.44},
        {"t": "AMZN", "p": 9.28, "c": -27.45},
        {"t": "DHR", "p": 7.30, "c": -4.88},
        {"t": "VST", "p": 5.06, "c": -28.97},
        {"t": "BBWI", "p": 5.06, "c": -1.59},
        {"t": "MSFT", "p": 5.04, "c": -44.94},
        {"t": "ICE", "p": 4.51, "c": 108.50},
        {"t": "META", "p": 4.20, "c": -50.45},
        {"t": "TSM", "p": 4.16, "c": -12.10},
        {"t": "LYV", "p": 3.45, "c": 71.43},
        {"t": "BN", "p": 3.38, "c": "New"},
        {"t": "CPAY", "p": 3.22, "c": None},
        {"t": "AAPL", "p": 2.92, "c": -52.31},
        {"t": "J", "p": 2.91, "c": -5.35},
        {"t": "CNK", "p": 2.62, "c": None},
        {"t": "FERG", "p": 2.58, "c": None},
        {"t": "CRH", "p": 2.56, "c": 215.38},
        {"t": "ROP", "p": 1.80, "c": None},
        {"t": "FLUT", "p": 1.63, "c": "New"},
        {"t": "APO", "p": 1.60, "c": -5.00},
        {"t": "LPLA", "p": 1.52, "c": "New"},
        {"t": "CRS", "p": 1.42, "c": "New"},
        {"t": "TSLA", "p": 1.41, "c": "New"},
        {"t": "APH", "p": 1.40, "c": -42.86},
        {"t": "CVS", "p": 1.33, "c": "New"},
        {"t": "HES", "p": 1.14, "c": None},
        {"t": "ANSS", "p": 1.09, "c": "New"},
        {"t": "EQT", "p": 0.96, "c": None},
        {"t": "TDS", "p": 0.90, "c": 26.87},
        {"t": "APO+A", "p": 0.82, "c": None},
        {"t": "GB", "p": 0.62, "c": None},
        {"t": "USM", "p": 0.40, "c": None},
        {"t": "HE", "p": 0.20, "c": "New"},
        {"t": "HTZWW", "p": 0.12, "c": None},
        {"t": "AUR", "p": 0.08, "c": None},
        {"t": "FLYX", "p": 0.04, "c": None},
        {"t": "AUROW", "p": 0.02, "c": None},
        {"t": "CCO", "p": 0.02, "c": "New"},
        {"t": "NPWR.WS", "p": 0.01, "c": None},
        {"t": "EGGF.WS", "p": 0.00, "c": None},
        {"t": "GB.WS", "p": 0.00, "c": None},
        {"t": "JWSWF", "p": 0.00, "c": None},
        {"t": "AIG", "p": 0.00, "c": -100.00},
        {"t": "ASML", "p": 0.00, "c": -100.00},
        {"t": "DT", "p": 0.00, "c": -100.00},
        {"t": "UBER", "p": 0.00, "c": -100.00},
        {"t": "VZ", "p": 0.00, "c": -100.00},
        {"t": "MU", "p": 0.00, "c": -100.00},
        {"t": "AAP", "p": 0.00, "c": -100.00},
        {"t": "KBH", "p": 0.00, "c": -100.00},
        {"t": "GOOGL", "p": 0.00, "c": -100.00},
        {"t": "MSCI", "p": 0.00, "c": -100.00},
        {"t": "IFF", "p": 0.00, "c": -100.00}
    ],
    
    "jun_30_24": [
        {"t": "AMZN", "p": 11.28, "c": None},
        {"t": "PCG", "p": 10.74, "c": -7.10},
        {"t": "MSFT", "p": 8.08, "c": -10.48},
        {"t": "META", "p": 6.35, "c": -11.00},
        {"t": "DHR", "p": 5.86, "c": None},
        {"t": "BBWI", "p": 5.35, "c": -6.81},
        {"t": "AAPL", "p": 4.70, "c": "New"},
        {"t": "VST", "p": 4.40, "c": None},
        {"t": "GOOGL", "p": 4.13, "c": -34.00},
        {"t": "TSM", "p": 4.03, "c": 72.34},
        {"t": "AIG", "p": 2.93, "c": None},
        {"t": "J", "p": 2.79, "c": -0.39},
        {"t": "CPAY", "p": 2.33, "c": 17.69},
        {"t": "VZ", "p": 2.21, "c": None},
        {"t": "APH", "p": 2.16, "c": "New"},
        {"t": "FERG", "p": 2.14, "c": -11.47},
        {"t": "UBER", "p": 1.75, "c": 320.00},
        {"t": "CNK", "p": 1.73, "c": 40.00},
        {"t": "KBH", "p": 1.69, "c": "New"},
        {"t": "ICE", "p": 1.57, "c": None},
        {"t": "ROP", "p": 1.55, "c": "New"},
        {"t": "LYV", "p": 1.46, "c": "New"},
        {"t": "IFF", "p": 1.42, "c": -7.14},
        {"t": "APO", "p": 1.35, "c": None},
        {"t": "AAP", "p": 1.08, "c": None},
        {"t": "HES", "p": 1.06, "c": "New"},
        {"t": "ASML", "p": 0.94, "c": "New"},
        {"t": "MSCI", "p": 0.83, "c": "New"},
        {"t": "EQT", "p": 0.83, "c": None},
        {"t": "APO+A", "p": 0.68, "c": None},
        {"t": "CRH", "p": 0.56, "c": "New"},
        {"t": "TDS", "p": 0.54, "c": 6.05},
        {"t": "GB", "p": 0.46, "c": None},
        {"t": "MU", "p": 0.41, "c": "New"},
        {"t": "USM", "p": 0.35, "c": None},
        {"t": "HTZWW", "p": 0.11, "c": None},
        {"t": "DT", "p": 0.08, "c": "New"},
        {"t": "FLYX", "p": 0.05, "c": None},
        {"t": "AUR", "p": 0.03, "c": None},
        {"t": "NPWR.WS", "p": 0.01, "c": None},
        {"t": "AUROW", "p": 0.00, "c": None},
        {"t": "EGGF.WS", "p": 0.00, "c": None},
        {"t": "GB.WS", "p": 0.00, "c": None},
        {"t": "JWSWF", "p": 0.00, "c": None},
        {"t": "IT", "p": 0.00, "c": -100.00},
        {"t": "GS", "p": 0.00, "c": -100.00},
        {"t": "SPGI", "p": 0.00, "c": -100.00},
        {"t": "MRVL", "p": 0.00, "c": -100.00},
        {"t": "WCC", "p": 0.00, "c": -100.00},
        {"t": "PTEN", "p": 0.00, "c": -100.00},
        {"t": "TDS CALL", "p": 0.00, "c": -100.00}
    ],
    
    "mar_31_24": [
        {"t": "PCG", "p": 12.36, "c": None},
        {"t": "AMZN", "p": 11.72, "c": 21.43},
        {"t": "MSFT", "p": 9.46, "c": -12.41},
        {"t": "BBWI", "p": 8.19, "c": -7.22},
        {"t": "META", "p": 7.65, "c": 6.55},
        {"t": "DHR", "p": 6.52, "c": None},
        {"t": "GOOGL", "p": 5.77, "c": "New"},
        {"t": "VST", "p": 3.97, "c": -2.83},
        {"t": "AIG", "p": 3.44, "c": None},
        {"t": "J", "p": 3.43, "c": None},
        {"t": "FERG", "p": 3.03, "c": None},
        {"t": "CPAY", "p": 2.56, "c": 5.69},
        {"t": "VZ", "p": 2.46, "c": None},
        {"t": "TSM", "p": 2.04, "c": None},
        {"t": "SPGI", "p": 1.82, "c": "New"},
        {"t": "ICE", "p": 1.75, "c": 42.86},
        {"t": "AAP", "p": 1.62, "c": "New"},
        {"t": "IFF", "p": 1.53, "c": -32.04},
        {"t": "APO", "p": 1.43, "c": 11.11},
        {"t": "MRVL", "p": 1.38, "c": "New"},
        {"t": "GS", "p": 1.33, "c": "New"},
        {"t": "WCC", "p": 1.15, "c": 5.04},
        {"t": "CNK", "p": 1.15, "c": "New"},
        {"t": "EQT", "p": 0.92, "c": None},
        {"t": "APO+A", "p": 0.73, "c": None},
        {"t": "GB", "p": 0.56, "c": None},
        {"t": "UBER", "p": 0.49, "c": -50.00},
        {"t": "TDS", "p": 0.44, "c": None},
        {"t": "IT", "p": 0.33, "c": "New"},
        {"t": "USM", "p": 0.25, "c": None},
        {"t": "HTZWW", "p": 0.22, "c": None},
        {"t": "TDS CALL", "p": 0.15, "c": "New"},
        {"t": "FLYX", "p": 0.06, "c": None},
        {"t": "AUR", "p": 0.04, "c": None},
        {"t": "PTEN", "p": 0.02, "c": "New"},
        {"t": "NPWR.WS", "p": 0.02, "c": None},
        {"t": "AUROW", "p": 0.01, "c": None},
        {"t": "JWSWF", "p": 0.00, "c": None},
        {"t": "EGGF.WS", "p": 0.00, "c": None},
        {"t": "GB.WS", "p": 0.00, "c": None},
        {"t": "X", "p": 0.00, "c": -100.00},
        {"t": "SLACW", "p": 0.00, "c": -100.00},
        {"t": "TMCWW", "p": 0.00, "c": -100.00},
        {"t": "BMRN", "p": 0.00, "c": -100.00},
        {"t": "DD", "p": 0.00, "c": -100.00},
        {"t": "MCK", "p": 0.00, "c": -100.00}
    ]
}


# In[36]:


Point72 = {
    "dec_31_24": [
        {"t": "SPY CALL", "p": 2.56, "c": 37.46},
        {"t": "AMZN", "p": 1.35, "c": "New"},
        {"t": "MSFT", "p": 1.05, "c": 356.91},
        {"t": "NVDA", "p": 0.83, "c": 13.53},
        {"t": "TSM", "p": 0.72, "c": 106.72},
        {"t": "KO", "p": 0.53, "c": 450.30},
        {"t": "T", "p": 0.52, "c": "New"},
        {"t": "INTU", "p": 0.51, "c": 2450.38},
        {"t": "DIS", "p": 0.51, "c": "New"},
        {"t": "ANET", "p": 0.49, "c": -13.99},
        {"t": "ADBE", "p": 0.49, "c": 180.73},
        {"t": "DHR", "p": 0.46, "c": 462.02},
        {"t": "CRM", "p": 0.44, "c": "New"},
        {"t": "ADSK", "p": 0.43, "c": 83.29},
        {"t": "CCL", "p": 0.42, "c": 134.11},
        {"t": "BA", "p": 0.41, "c": 106.73},
        {"t": "COP", "p": 0.41, "c": 53.29},
        {"t": "KR", "p": 0.41, "c": 87.92},
        {"t": "SNOW", "p": 0.39, "c": 811.57},
        {"t": "MTSI", "p": 0.38, "c": -22.81},
        {"t": "LITE", "p": 0.36, "c": -25.96},
        {"t": "UNP", "p": 0.36, "c": "New"},
        {"t": "ETR", "p": 0.36, "c": "New"},
        {"t": "PCG", "p": 0.35, "c": 133.83},
        {"t": "CSCO", "p": 0.34, "c": 148.89},
        {"t": "FDX", "p": 0.34, "c": "New"},
        {"t": "NVDA", "p": 0.34, "c": 2.64},
        {"t": "SE", "p": 0.34, "c": 15.55},
        {"t": "NFLX", "p": 0.31, "c": "New"},
        {"t": "CRDO", "p": 0.30, "c": -21.24},
        {"t": "BSX", "p": 0.29, "c": -33.59},
        {"t": "DKNG", "p": 0.29, "c": 79.35},
        {"t": "TWLO", "p": 0.29, "c": 1.06},
        {"t": "TSEM", "p": 0.28, "c": 21.03},
        {"t": "UNH", "p": 0.28, "c": "New"},
        {"t": "BKNG", "p": 0.28, "c": "New"},
        {"t": "EQT", "p": 0.27, "c": -17.75},
        {"t": "ICLR", "p": 0.26, "c": 649.66},
        {"t": "PFGC", "p": 0.26, "c": 30.91},
        {"t": "ISRG", "p": 0.26, "c": -22.57},
        {"t": "AAL", "p": 0.26, "c": 487.51},
        {"t": "OKTA", "p": 0.26, "c": 236.81},
        {"t": "TDG", "p": 0.25, "c": 3481.78},
        {"t": "MRVL", "p": 0.25, "c": "New"},
        {"t": "KEYS", "p": 0.24, "c": 343.55},
        {"t": "CAH", "p": 0.24, "c": 266.49},
        {"t": "UBER", "p": 0.24, "c": 96.26},
        {"t": "STX", "p": 0.23, "c": 50.39},
        {"t": "SPOT", "p": 0.23, "c": -3.16},
        {"t": "BURL", "p": 0.23, "c": 11.87},
        {"t": "IBIT", "p": 0.22, "c": "New"},
        {"t": "NET", "p": 0.22, "c": "New"},
        {"t": "BBWI", "p": 0.22, "c": -22.77},
        {"t": "COHR", "p": 0.22, "c": -33.52},
        {"t": "AVGO", "p": 0.22, "c": 146.66},
        {"t": "EVRG", "p": 0.21, "c": -17.90},
        {"t": "TDY", "p": 0.21, "c": "New"},
        {"t": "FLUT", "p": 0.21, "c": -5.00},
        {"t": "VRSN", "p": 0.21, "c": 268.84},
        {"t": "CRNX", "p": 0.21, "c": 21.22},
        {"t": "JBL", "p": 0.20, "c": 1007.56},
        {"t": "CRH", "p": 0.20, "c": 266.08},
        {"t": "ALK", "p": 0.20, "c": 134.03},
        {"t": "KO", "p": 0.20, "c": 808.64},
        {"t": "MELI", "p": 0.20, "c": 244.58},
        {"t": "IP", "p": 0.20, "c": -15.63},
        {"t": "SPIB", "p": 0.20, "c": 2.53},
        {"t": "TREX", "p": 0.19, "c": 87.40},
        {"t": "RGEN", "p": 0.19, "c": 183.15},
        {"t": "AMZN", "p": 0.19, "c": 67.97},
        {"t": "CNC", "p": 0.19, "c": 771.11},
        {"t": "JD", "p": 0.19, "c": -6.69},
        {"t": "DLTR", "p": 0.19, "c": 88.45},
        {"t": "MMM", "p": 0.19, "c": -2.68},
        {"t": "IRM", "p": 0.19, "c": 439.84},
        {"t": "FANG", "p": 0.18, "c": "New"},
        {"t": "DXCM", "p": 0.18, "c": "New"},
        {"t": "XEL", "p": 0.18, "c": 187.02},
        {"t": "BP", "p": 0.18, "c": 50.51},
        {"t": "RCL", "p": 0.18, "c": 5067.98},
        {"t": "AES", "p": 0.18, "c": "New"},
        {"t": "HUBS", "p": 0.18, "c": 102.72},
        {"t": "PAGS", "p": 0.18, "c": 33.11},
        {"t": "AMT", "p": 0.18, "c": 192.71},
        {"t": "DUK", "p": 0.18, "c": 244.38},
        {"t": "POST", "p": 0.18, "c": 53.43},
        {"t": "AAPL CALL", "p": 0.17, "c": 3.50},
        {"t": "CLX", "p": 0.17, "c": 12.30},
        {"t": "USFD", "p": 0.17, "c": 43.19},
        {"t": "VST", "p": 0.17, "c": 43.55},
        {"t": "CMG", "p": 0.17, "c": "New"},
        {"t": "BRBR", "p": 0.17, "c": -40.60},
        {"t": "CVNA", "p": 0.17, "c": 293.87},
        {"t": "SBUX", "p": 0.17, "c": "New"},
        {"t": "KDP", "p": 0.17, "c": 12.78},
        {"t": "STNE", "p": 0.16, "c": 22.19}
    ],
    
    "sep_30_24": [
        {"t": "SPY CALL", "p": 1.99, "c": 47.74},
        {"t": "NVDA", "p": 0.72, "c": 74.46},
        {"t": "SHEL", "p": 0.58, "c": 194.39},
        {"t": "ANET", "p": 0.54, "c": 31.79},
        {"t": "CMCSA", "p": 0.50, "c": 31.41},
        {"t": "MTSI", "p": 0.45, "c": 173.87},
        {"t": "BSX", "p": 0.45, "c": 8.22},
        {"t": "LITE", "p": 0.40, "c": 23.55},
        {"t": "QQQ CALL", "p": 0.40, "c": 71.86},
        {"t": "ISRG", "p": 0.34, "c": -23.46},
        {"t": "TSM", "p": 0.34, "c": 95.26},
        {"t": "COHR", "p": 0.33, "c": -43.86},
        {"t": "NVDA", "p": 0.32, "c": 97.17},
        {"t": "GILD", "p": 0.31, "c": 350.14},
        {"t": "COP", "p": 0.31, "c": -7.20},
        {"t": "GOOGL", "p": 0.31, "c": "New"},
        {"t": "EQT", "p": 0.29, "c": 84.58},
        {"t": "EVRG", "p": 0.28, "c": 25.78},
        {"t": "SE", "p": 0.28, "c": 6.43},
        {"t": "ALGN", "p": 0.27, "c": 96.30},
        {"t": "JD", "p": 0.26, "c": 170.13},
        {"t": "BBWI", "p": 0.26, "c": 41.74},
        {"t": "CNI", "p": 0.26, "c": "New"},
        {"t": "MSFT", "p": 0.26, "c": "New"},
        {"t": "GPN", "p": 0.25, "c": -26.39},
        {"t": "SKX", "p": 0.25, "c": 253.00},
        {"t": "BRBR", "p": 0.25, "c": 21.48},
        {"t": "INCY", "p": 0.25, "c": "New"},
        {"t": "PINS", "p": 0.25, "c": "New"},
        {"t": "FTV", "p": 0.24, "c": 1005.87},
        {"t": "RDDT", "p": 0.24, "c": 3172.01},
        {"t": "ADSK", "p": 0.24, "c": -35.26},
        {"t": "ONC", "p": 0.24, "c": 74.93},
        {"t": "BMY", "p": 0.24, "c": 351.46},
        {"t": "IP", "p": 0.23, "c": 511.14},
        {"t": "ACHC", "p": 0.23, "c": 0.55},
        {"t": "APH", "p": 0.23, "c": 151.68},
        {"t": "APTV", "p": 0.23, "c": "New"},
        {"t": "ROST", "p": 0.23, "c": 51.17},
        {"t": "AMD", "p": 0.23, "c": "New"},
        {"t": "DT", "p": 0.22, "c": -24.89},
        {"t": "FLUT", "p": 0.22, "c": -22.74},
        {"t": "ADBE", "p": 0.22, "c": 113.44},
        {"t": "NOC", "p": 0.22, "c": "New"},
        {"t": "KR", "p": 0.22, "c": -55.33},
        {"t": "MMM", "p": 0.22, "c": -47.68},
        {"t": "TSEM", "p": 0.22, "c": 203.82},
        {"t": "RCI", "p": 0.22, "c": -13.84},
        {"t": "VLO", "p": 0.22, "c": "New"},
        {"t": "JD", "p": 0.22, "c": 731.13},
        {"t": "SPIB", "p": 0.21, "c": 5.33},
        {"t": "STX", "p": 0.21, "c": "New"},
        {"t": "DLR", "p": 0.21, "c": "New"},
        {"t": "SPOT", "p": 0.21, "c": 93.52},
        {"t": "D", "p": 0.21, "c": 10324.76},
        {"t": "RPD", "p": 0.21, "c": -14.62},
        {"t": "BURL", "p": 0.21, "c": 852.74},
        {"t": "STNE", "p": 0.21, "c": 36.19},
        {"t": "MKC", "p": 0.20, "c": 58.21},
        {"t": "PFGC", "p": 0.20, "c": -5.73},
        {"t": "PAGS", "p": 0.20, "c": 33.43},
        {"t": "MSFT", "p": 0.20, "c": 86.10},
        {"t": "TSM", "p": 0.20, "c": 76.30},
        {"t": "BAC", "p": 0.19, "c": 233.78},
        {"t": "CRDO", "p": 0.19, "c": 90.47},
        {"t": "SPOT", "p": 0.19, "c": 8.54},
        {"t": "TT", "p": 0.19, "c": -32.30},
        {"t": "CRNX", "p": 0.19, "c": -17.27},
        {"t": "DKNG", "p": 0.19, "c": 74.50},
        {"t": "KDP", "p": 0.19, "c": -6.01},
        {"t": "BA", "p": 0.19, "c": "New"},
        {"t": "TWLO", "p": 0.19, "c": 33.59},
        {"t": "CGNX", "p": 0.18, "c": 122.75},
        {"t": "CHRD", "p": 0.18, "c": 143.82},
        {"t": "COGT", "p": 0.18, "c": None},
        {"t": "WEN", "p": 0.18, "c": 159.57},
        {"t": "FERG", "p": 0.18, "c": "New"},
        {"t": "TEAM", "p": 0.18, "c": 760.47},
        {"t": "LIVN", "p": 0.18, "c": 62.72},
        {"t": "GM", "p": 0.17, "c": 13.00},
        {"t": "ZS", "p": 0.17, "c": 5.28},
        {"t": "AAPL CALL", "p": 0.17, "c": 129.67},
        {"t": "QSR", "p": 0.17, "c": 282.60},
        {"t": "CLX", "p": 0.17, "c": -28.04},
        {"t": "ETN", "p": 0.17, "c": "New"},
        {"t": "DECK", "p": 0.17, "c": "New"},
        {"t": "ED", "p": 0.16, "c": 1766.00},
        {"t": "AEP", "p": 0.16, "c": -34.49},
        {"t": "UBER", "p": 0.16, "c": 266.57},
        {"t": "XYZ", "p": 0.16, "c": 47.98},
        {"t": "PCG", "p": 0.16, "c": 2.67},
        {"t": "ADBE", "p": 0.16, "c": 6666.59},
        {"t": "TFX", "p": 0.16, "c": 31.23},
        {"t": "PH", "p": 0.16, "c": "New"}
    ],
    
    "jun_30_24": [
        {"t": "SPY CALL", "p": 1.34, "c": 3.00},
        {"t": "AMZN", "p": 1.03, "c": -16.19},
        {"t": "AAPL", "p": 0.56, "c": "New"},
        {"t": "DELL", "p": 0.56, "c": 1665.94},
        {"t": "COHR", "p": 0.51, "c": 16.64},
        {"t": "KR", "p": 0.45, "c": 96.58},
        {"t": "NVDA", "p": 0.44, "c": -16.21},
        {"t": "ISRG", "p": 0.43, "c": 9.29},
        {"t": "AVGO", "p": 0.41, "c": -67.47},
        {"t": "BSX", "p": 0.41, "c": 32.07},
        {"t": "ANET", "p": 0.39, "c": -32.56},
        {"t": "COP", "p": 0.38, "c": "New"},
        {"t": "CMCSA", "p": 0.38, "c": "New"},
        {"t": "TER", "p": 0.35, "c": "New"},
        {"t": "ADSK", "p": 0.35, "c": 373.35},
        {"t": "WDC", "p": 0.35, "c": -30.01},
        {"t": "GPN", "p": 0.34, "c": "New"},
        {"t": "MMM", "p": 0.33, "c": 18.15},
        {"t": "AAPL", "p": 0.33, "c": 128.97},
        {"t": "CSX", "p": 0.32, "c": -4.55},
        {"t": "TMO", "p": 0.31, "c": 743.64},
        {"t": "CCL", "p": 0.31, "c": -22.64},
        {"t": "HUM", "p": 0.31, "c": 285.14},
        {"t": "HUBS", "p": 0.31, "c": 44.93},
        {"t": "RCL", "p": 0.29, "c": -27.91},
        {"t": "CTRA", "p": 0.29, "c": 10.58},
        {"t": "DG", "p": 0.29, "c": 148.64},
        {"t": "AMT", "p": 0.28, "c": 5.38},
        {"t": "LITE", "p": 0.28, "c": 19.65},
        {"t": "RPD", "p": 0.28, "c": 251.99},
        {"t": "SPY CALL", "p": 0.27, "c": 124.27},
        {"t": "ZBRA", "p": 0.27, "c": -20.53},
        {"t": "PPL", "p": 0.27, "c": 91.32},
        {"t": "DASH", "p": 0.26, "c": 66.48},
        {"t": "DT", "p": 0.26, "c": 251.22},
        {"t": "ACHC", "p": 0.26, "c": 266.01},
        {"t": "TT", "p": 0.25, "c": 162.69},
        {"t": "RCI", "p": 0.25, "c": 724.62},
        {"t": "ASML", "p": 0.25, "c": -44.74},
        {"t": "QQQ CALL", "p": 0.24, "c": 191.21},
        {"t": "SHW", "p": 0.24, "c": 73.68},
        {"t": "BP", "p": 0.24, "c": -42.99},
        {"t": "ICLR", "p": 0.24, "c": 346.85},
        {"t": "XLE CALL", "p": 0.24, "c": 411.80},
        {"t": "SRE", "p": 0.23, "c": -12.15},
        {"t": "UNH", "p": 0.23, "c": 74.73},
        {"t": "BBWI", "p": 0.23, "c": -10.66},
        {"t": "FLUT", "p": 0.23, "c": "New"},
        {"t": "NVO", "p": 0.23, "c": "New"},
        {"t": "KEYS", "p": 0.23, "c": 22.81},
        {"t": "SHEL", "p": 0.23, "c": -33.72},
        {"t": "AEP", "p": 0.23, "c": 3096.11},
        {"t": "VST", "p": 0.22, "c": 121.07},
        {"t": "ELV", "p": 0.22, "c": -19.96},
        {"t": "CIVI", "p": 0.22, "c": 325.02},
        {"t": "CSL", "p": 0.22, "c": -9.80},
        {"t": "POST", "p": 0.22, "c": 51.39},
        {"t": "OC", "p": 0.22, "c": 168.30},
        {"t": "TTWO", "p": 0.22, "c": 3786.37},
        {"t": "WMT", "p": 0.22, "c": 10.84},
        {"t": "ZM", "p": 0.22, "c": "New"},
        {"t": "SPGI", "p": 0.22, "c": 100.83},
        {"t": "OLED", "p": 0.22, "c": -43.32},
        {"t": "OVV", "p": 0.22, "c": -28.14},
        {"t": "PAGS", "p": 0.22, "c": 11.33},
        {"t": "GM", "p": 0.21, "c": -4.24},
        {"t": "KO", "p": 0.21, "c": -62.50},
        {"t": "SE", "p": 0.21, "c": -38.30},
        {"t": "LHX", "p": 0.21, "c": -2.86},
        {"t": "CRNX", "p": 0.21, "c": -43.82},
        {"t": "GEV", "p": 0.21, "c": 4735.00},
        {"t": "CLX", "p": 0.21, "c": -23.12},
        {"t": "SPIB", "p": 0.21, "c": -1.89},
        {"t": "BRBR", "p": 0.21, "c": 23.30},
        {"t": "FOXA", "p": 0.20, "c": -63.74},
        {"t": "PYPL", "p": 0.20, "c": -56.01},
        {"t": "EVRG", "p": 0.20, "c": -39.66},
        {"t": "ALK", "p": 0.20, "c": 8.00},
        {"t": "VZ", "p": 0.20, "c": 209.40},
        {"t": "NTES", "p": 0.20, "c": 83.33},
        {"t": "V", "p": 0.20, "c": 63.88},
        {"t": "ZS", "p": 0.19, "c": "New"},
        {"t": "AMZN", "p": 0.19, "c": -2.97},
        {"t": "PFGC", "p": 0.19, "c": 27.81},
        {"t": "EDU", "p": 0.19, "c": 17.14},
        {"t": "CMG", "p": 0.19, "c": 445.74},
        {"t": "UAL", "p": 0.19, "c": 630.78},
        {"t": "TOL", "p": 0.19, "c": 80.97},
        {"t": "KDP", "p": 0.19, "c": -10.81},
        {"t": "DLTR", "p": 0.19, "c": 165.35},
        {"t": "TMO", "p": 0.18, "c": 730.66},
        {"t": "FDX", "p": 0.18, "c": -67.95},
        {"t": "TEL", "p": 0.18, "c": 238.36},
        {"t": "USFD", "p": 0.18, "c": 128.33},
        {"t": "CROX", "p": 0.18, "c": 76.95},
        {"t": "TSM", "p": 0.18, "c": "New"}
    ],
    
    "mar_31_24": [
        {"t": "SPY CALL", "p": 1.13, "c": -14.13},
        {"t": "AMZN", "p": 1.03, "c": -19.19},
        {"t": "AVGO", "p": 0.95, "c": "New"},
        {"t": "MSFT", "p": 0.65, "c": 124.15},
        {"t": "T", "p": 0.65, "c": 168.23},
        {"t": "FDX", "p": 0.50, "c": 8.18},
        {"t": "KO", "p": 0.49, "c": 97.54},
        {"t": "PYPL", "p": 0.48, "c": 825.15},
        {"t": "FOXA", "p": 0.46, "c": 1416.19},
        {"t": "ANET", "p": 0.44, "c": 18.54},
        {"t": "EW", "p": 0.43, "c": "New"},
        {"t": "WDC", "p": 0.41, "c": -8.92},
        {"t": "BA", "p": 0.40, "c": 495.29},
        {"t": "CVE", "p": 0.40, "c": 81.21},
        {"t": "XOM", "p": 0.39, "c": 84.11},
        {"t": "COF", "p": 0.39, "c": 138.15},
                {"t": "BP", "p": 0.39, "c": 30.26},
        {"t": "GOOGL", "p": 0.39, "c": 442.54},
        {"t": "PEG", "p": 0.39, "c": 406.40},
        {"t": "ASML", "p": 0.38, "c": 13.53},
        {"t": "PCG", "p": 0.37, "c": 51.49},
        {"t": "CRNX", "p": 0.35, "c": 44.85},
        {"t": "NVDA", "p": 0.35, "c": -54.68},
        {"t": "CSX", "p": 0.34, "c": -14.79},
        {"t": "COHR", "p": 0.33, "c": 85.82},
        {"t": "RCL", "p": 0.32, "c": 19.23},
        {"t": "ISRG", "p": 0.32, "c": -7.74},
        {"t": "CCL", "p": 0.32, "c": 227.65},
        {"t": "NSC", "p": 0.31, "c": 165.48},
        {"t": "NVDA", "p": 0.31, "c": -25.62},
        {"t": "EVRG", "p": 0.30, "c": 3.92},
        {"t": "ZBRA", "p": 0.30, "c": "New"},
        {"t": "BBWI", "p": 0.30, "c": 25.83},
        {"t": "OVV", "p": 0.30, "c": 39.22},
        {"t": "SHEL", "p": 0.29, "c": 17.81},
        {"t": "OLED", "p": 0.28, "c": 75.78},
        {"t": "CLX", "p": 0.27, "c": 15.17},
        {"t": "SJM", "p": 0.25, "c": 93.65},
        {"t": "MORF", "p": 0.25, "c": 2.09},
        {"t": "BSX", "p": 0.25, "c": -49.77},
        {"t": "AMT", "p": 0.25, "c": 26.94},
        {"t": "CTRA", "p": 0.24, "c": 4.11},
        {"t": "DD", "p": 0.24, "c": 127.44},
        {"t": "ELV", "p": 0.24, "c": 371.88},
        {"t": "KR", "p": 0.24, "c": "New"},
        {"t": "SE", "p": 0.23, "c": 115.72},
        {"t": "SRE", "p": 0.23, "c": -20.90},
        {"t": "PH", "p": 0.22, "c": 43.90},
        {"t": "MMM", "p": 0.22, "c": -1.26},
        {"t": "PAGS", "p": 0.21, "c": -10.18},
        {"t": "DDOG", "p": 0.21, "c": 338.73},
        {"t": "CSL", "p": 0.21, "c": 67.75},
        {"t": "EXAS", "p": 0.21, "c": 52.79},
        {"t": "META", "p": 0.21, "c": 843.60},
        {"t": "ASO", "p": 0.20, "c": -4.52},
        {"t": "NVDA CALL", "p": 0.20, "c": -22.79},
        {"t": "HUBS", "p": 0.20, "c": 7.15},
        {"t": "RH", "p": 0.20, "c": -44.03},
        {"t": "GM", "p": 0.20, "c": -42.14},
        {"t": "LITE", "p": 0.19, "c": 365.09},
        {"t": "KEYS", "p": 0.19, "c": 19.68},
        {"t": "STNE", "p": 0.19, "c": -23.41},
        {"t": "SPIB", "p": 0.19, "c": "New"},
        {"t": "HUBB", "p": 0.19, "c": 22.01},
        {"t": "LHX", "p": 0.19, "c": -20.89},
        {"t": "FN", "p": 0.18, "c": "New"},
        {"t": "DASH", "p": 0.18, "c": 221.76},
        {"t": "ALK", "p": 0.18, "c": 271.85},
        {"t": "BMRN", "p": 0.18, "c": 195.57},
        {"t": "NRG", "p": 0.18, "c": "New"},
        {"t": "NBIX", "p": 0.18, "c": -39.84},
        {"t": "PCAR", "p": 0.18, "c": 3.99},
        {"t": "VMC", "p": 0.17, "c": -49.02},
        {"t": "KDP", "p": 0.17, "c": -24.29},
        {"t": "AES", "p": 0.17, "c": 62.55},
        {"t": "AMZN", "p": 0.17, "c": -22.79},
        {"t": "NI", "p": 0.17, "c": 102.73},
        {"t": "EDU", "p": 0.16, "c": 41.67},
        {"t": "PDD", "p": 0.16, "c": 111.32},
        {"t": "COR", "p": 0.16, "c": "New"},
        {"t": "MTSI", "p": 0.16, "c": "New"},
        {"t": "WMT", "p": 0.16, "c": -40.26},
        {"t": "ZTS", "p": 0.16, "c": 18372.61},
        {"t": "META", "p": 0.16, "c": -78.66},
        {"t": "BRBR", "p": 0.16, "c": 80.39},
        {"t": "DHR", "p": 0.15, "c": "New"},
        {"t": "AON", "p": 0.15, "c": 2933.32},
        {"t": "PFGC", "p": 0.15, "c": -39.11},
        {"t": "RGEN", "p": 0.15, "c": -9.29},
        {"t": "SKX", "p": 0.15, "c": -16.33},
        {"t": "D", "p": 0.15, "c": 57.65},
        {"t": "LLY", "p": 0.15, "c": -26.46},
        {"t": "SHW", "p": 0.14, "c": -52.89},
        {"t": "GIS", "p": 0.14, "c": "New"},
        {"t": "CHRD", "p": 0.14, "c": "New"},
        {"t": "PDD", "p": 0.14, "c": 181.22},
        {"t": "FLR", "p": 0.14, "c": 145.14}
    ]
}


# In[37]:


Millennium = {
    "dec_31_24": [
        {"t": "IVV", "p": 1.48, "c": 15.56},
        {"t": "AVGO", "p": 0.77, "c": 534.87},
        {"t": "AAPL CALL", "p": 0.75, "c": -20.66},
        {"t": "QQQ CALL", "p": 0.73, "c": 6.29},
        {"t": "IBIT", "p": 0.72, "c": 27.03},
        {"t": "META", "p": 0.68, "c": 91.06},
        {"t": "NVDA CALL", "p": 0.65, "c": -11.83},
        {"t": "SPY CALL", "p": 0.62, "c": -37.03},
        {"t": "NVDA", "p": 0.61, "c": -10.54},
        {"t": "TSLA CALL", "p": 0.60, "c": 0.99},
        {"t": "MSFT", "p": 0.50, "c": -43.73},
        {"t": "AMZN CALL", "p": 0.46, "c": 28.19},
        {"t": "META CALL", "p": 0.44, "c": -16.17},
        {"t": "AMZN", "p": 0.43, "c": 262.60},
        {"t": "WFC", "p": 0.43, "c": 41.29},
        {"t": "MSFT CALL", "p": 0.41, "c": -30.14},
        {"t": "IWB", "p": 0.37, "c": 22234.15},
        {"t": "TSLA", "p": 0.36, "c": 195.27},
        {"t": "BSX", "p": 0.35, "c": -19.64},
        {"t": "BAC", "p": 0.35, "c": 91.29},
        {"t": "AVGO CALL", "p": 0.34, "c": 11.40},
        {"t": "NVDA", "p": 0.33, "c": 11.29},
        {"t": "FBTC", "p": 0.32, "c": -26.69},
        {"t": "AAPL", "p": 0.31, "c": -10.65},
        {"t": "MSFT", "p": 0.30, "c": 6.55},
        {"t": "NFLX", "p": 0.29, "c": 178.98},
        {"t": "LLY", "p": 0.28, "c": -19.10},
        {"t": "COF", "p": 0.27, "c": 515.55},
        {"t": "UNH", "p": 0.26, "c": 343.71},
        {"t": "AMZN", "p": 0.24, "c": 127.43},
        {"t": "LNG", "p": 0.24, "c": 4.76},
        {"t": "COP", "p": 0.23, "c": 121.80},
        {"t": "APP", "p": 0.22, "c": 113.87},
        {"t": "BMY", "p": 0.22, "c": 63.58},
        {"t": "MS", "p": 0.21, "c": 46.39},
        {"t": "CVE", "p": 0.20, "c": 84.32},
        {"t": "CRH", "p": 0.20, "c": 42.80},
        {"t": "SCHW", "p": 0.20, "c": 260.11},
        {"t": "FHN", "p": 0.19, "c": 102.29},
        {"t": "CAH", "p": 0.18, "c": 331.05},
        {"t": "JPM", "p": 0.18, "c": 11541.53},
        {"t": "META", "p": 0.18, "c": 88.72},
        {"t": "XLF CALL", "p": 0.18, "c": 125.79},
        {"t": "CNC", "p": 0.17, "c": 204.15},
        {"t": "TSM", "p": 0.17, "c": -5.05},
        {"t": "GOOG", "p": 0.17, "c": -20.10},
        {"t": "MRK", "p": 0.16, "c": 99.28},
        {"t": "KKR", "p": 0.16, "c": 6.02},
        {"t": "CSCO", "p": 0.16, "c": 286.96},
        {"t": "NI", "p": 0.15, "c": 185.05},
        {"t": "SHEL", "p": 0.15, "c": 8.99},
        {"t": "HYG CALL", "p": 0.15, "c": -13.95},
        {"t": "AVGO", "p": 0.15, "c": 22.74},
        {"t": "BP", "p": 0.15, "c": 254.20},
        {"t": "HES", "p": 0.15, "c": -40.61},
        {"t": "BA", "p": 0.14, "c": 157.44},
        {"t": "EEM CALL", "p": 0.14, "c": -48.47},
        {"t": "IWM", "p": 0.14, "c": 99.12},
        {"t": "DIS", "p": 0.14, "c": 84.00},
        {"t": "SPGI", "p": 0.14, "c": 94.24},
        {"t": "BRK.B", "p": 0.14, "c": 62.68},
        {"t": "JHG", "p": 0.14, "c": 23.94},
        {"t": "FDX", "p": 0.14, "c": 755.72},
        {"t": "WFC CALL", "p": 0.14, "c": 46.98},
        {"t": "SPY", "p": 0.14, "c": -90.79}
    ],
    
    "sep_30_24": [
        {"t": "SPY", "p": 1.42, "c": 81.03},
        {"t": "IVV", "p": 1.23, "c": -20.11},
        {"t": "SPY CALL", "p": 0.94, "c": -2.01},
        {"t": "MSFT", "p": 0.88, "c": 51.35},
        {"t": "AAPL CALL", "p": 0.86, "c": 4.44},
        {"t": "NVDA CALL", "p": 0.66, "c": -19.76},
        {"t": "QQQ CALL", "p": 0.64, "c": -37.64},
        {"t": "NVDA", "p": 0.60, "c": -12.56},
        {"t": "MSFT CALL", "p": 0.59, "c": 5.31},
        {"t": "META CALL", "p": 0.50, "c": -3.17},
        {"t": "SPOT", "p": 0.46, "c": 131.15},
        {"t": "BSX", "p": 0.41, "c": 0.80},
        {"t": "LLY", "p": 0.39, "c": 86.12},
        {"t": "TSLA CALL", "p": 0.38, "c": -17.16},
        {"t": "IBIT", "p": 0.38, "c": 116.04},
        {"t": "META", "p": 0.34, "c": 7.57},
        {"t": "AAPL", "p": 0.32, "c": 16.58},
        {"t": "AMZN CALL", "p": 0.30, "c": -40.13},
        {"t": "EEM CALL", "p": 0.30, "c": 5.51},
        {"t": "FBTC", "p": 0.29, "c": 3.32},
        {"t": "MSFT", "p": 0.28, "c": 69.50},
        {"t": "APO", "p": 0.27, "c": -16.71},
        {"t": "NVDA", "p": 0.26, "c": 20.02},
        {"t": "MDT", "p": 0.25, "c": 212.56},
        {"t": "HES", "p": 0.25, "c": 34.05},
        {"t": "WFC", "p": 0.24, "c": -31.17},
        {"t": "BABA", "p": 0.22, "c": 91134.62},
        {"t": "AVGO CALL", "p": 0.22, "c": 6.64},
        {"t": "GOOGL", "p": 0.20, "c": 6.83},
        {"t": "WDAY", "p": 0.20, "c": 41.11},
        {"t": "RTX", "p": 0.20, "c": 362.74},
        {"t": "PFE", "p": 0.20, "c": -22.33},
        {"t": "ACN", "p": 0.20, "c": 26.48},
        {"t": "GOOGL CALL", "p": 0.19, "c": -16.01},
        {"t": "FXI CALL", "p": 0.19, "c": -8.31},
        {"t": "LNG", "p": 0.19, "c": -24.36},
        {"t": "GOOG", "p": 0.18, "c": -18.96},
        {"t": "CME", "p": 0.18, "c": 60.80},
        {"t": "ADBE", "p": 0.18, "c": 4.85},
        {"t": "PH", "p": 0.18, "c": -16.38},
        {"t": "TLT", "p": 0.17, "c": 115.65},
        {"t": "HYG CALL", "p": 0.17, "c": 103.06},
        {"t": "EDR", "p": 0.17, "c": 14.35},
        {"t": "MMM", "p": 0.16, "c": -32.21},
        {"t": "ETN", "p": 0.16, "c": 21.84},
        {"t": "BAC", "p": 0.16, "c": -31.41},
        {"t": "EFA CALL", "p": 0.16, "c": 78.06},
        {"t": "TSM", "p": 0.15, "c": -17.29},
        {"t": "SWN", "p": 0.15, "c": 91.87},
        {"t": "JNPR", "p": 0.15, "c": 80.33},
        {"t": "ICE", "p": 0.15, "c": 17.87},
        {"t": "CVS", "p": 0.15, "c": 724.25},
        {"t": "SHEL", "p": 0.15, "c": 21.32},
        {"t": "PNC", "p": 0.14, "c": 66.44},
        {"t": "AMD CALL", "p": 0.14, "c": -13.87},
        {"t": "CRH", "p": 0.14, "c": -23.98},
        {"t": "XLF", "p": 0.14, "c": 144.85},
        {"t": "IFF", "p": 0.14, "c": -31.91},
        {"t": "ANSS", "p": 0.14, "c": -15.70},
        {"t": "MSCI", "p": 0.13, "c": 77.69},
        {"t": "DY", "p": 0.13, "c": -6.94},
        {"t": "WMT", "p": 0.13, "c": -68.75},
        {"t": "KKR", "p": 0.13, "c": 759.77},
        {"t": "FAF", "p": 0.13, "c": 370.47},
        {"t": "XOM CALL", "p": 0.13, "c": 6.59},
        {"t": "FERG", "p": 0.13, "c": 29.40},
        {"t": "AAPL", "p": 0.13, "c": -90.44}
    ],
    "jun_30_24": [
        {"t": "IVV", "p": 1.45, "c": 54.82},
        {"t": "AAPL", "p": 1.19, "c": 67.53},
        {"t": "QQQ CALL", "p": 1.00, "c": -18.71},
        {"t": "SPY CALL", "p": 0.90, "c": -17.19},
        {"t": "NVDA CALL", "p": 0.83, "c": 1.13},
        {"t": "AMZN", "p": 0.78, "c": -7.57},
        {"t": "SPY", "p": 0.74, "c": -37.44},
        {"t": "AAPL CALL", "p": 0.74, "c": -15.70},
        {"t": "NVDA", "p": 0.69, "c": -5.04},
        {"t": "MSFT", "p": 0.60, "c": 8.61},
        {"t": "MSFT CALL", "p": 0.57, "c": -20.39},
        {"t": "MRK", "p": 0.52, "c": -4.81},
        {"t": "AMZN CALL", "p": 0.52, "c": -7.18},
        {"t": "META CALL", "p": 0.45, "c": -29.96},
        {"t": "AVGO", "p": 0.42, "c": 54.76},
        {"t": "BSX", "p": 0.37, "c": 18.88},
        {"t": "WFC", "p": 0.36, "c": 390.23},
        {"t": "WMT", "p": 0.35, "c": 67.97},
        {"t": "TSLA CALL", "p": 0.34, "c": -6.91},
        {"t": "APO", "p": 0.30, "c": 52.08},
        {"t": "ISRG", "p": 0.30, "c": 57.26},
        {"t": "META", "p": 0.28, "c": -49.53},
        {"t": "UNH", "p": 0.27, "c": 448.78},
        {"t": "COP", "p": 0.27, "c": 2277.62},
        {"t": "FBTC", "p": 0.26, "c": -13.62},
        {"t": "EEM CALL", "p": 0.26, "c": -2.27},
        {"t": "GOOGL CALL", "p": 0.25, "c": -37.80},
        {"t": "AAPL", "p": 0.25, "c": 50.11},
        {"t": "PFE", "p": 0.25, "c": 156.19},
        {"t": "GOOG", "p": 0.24, "c": -17.29},
        {"t": "LNG", "p": 0.24, "c": 14.26},
        {"t": "BAC", "p": 0.23, "c": 149.37},
        {"t": "SMCI", "p": 0.22, "c": 806.66},
        {"t": "NU", "p": 0.22, "c": 370.55},
        {"t": "NVDA", "p": 0.22, "c": 32.66},
        {"t": "LLY", "p": 0.21, "c": -35.46},
        {"t": "GOOGL", "p": 0.21, "c": -52.43},
        {"t": "SPGI", "p": 0.20, "c": -7.57},
        {"t": "SCHW", "p": 0.20, "c": 29.59},
        {"t": "HES", "p": 0.20, "c": -20.32},
        {"t": "KO", "p": 0.20, "c": 347.18},
        {"t": "TT", "p": 0.19, "c": 259.93},
        {"t": "AVGO CALL", "p": 0.19, "c": -13.14},
        {"t": "GLD CALL", "p": 0.19, "c": -6.79},
        {"t": "GOOG CALL", "p": 0.19, "c": 54.11},
        {"t": "TSM", "p": 0.18, "c": 23.16},
        {"t": "CBRE", "p": 0.18, "c": 71.48},
        {"t": "IFF", "p": 0.18, "c": 161.82},
        {"t": "MMM", "p": 0.18, "c": -13.21},
        {"t": "XOM", "p": 0.18, "c": 2996.78},
        {"t": "ADBE", "p": 0.18, "c": -24.64},
        {"t": "MSFT", "p": 0.17, "c": 38.73},
        {"t": "SPOT", "p": 0.17, "c": 159.17},
        {"t": "WDC", "p": 0.17, "c": 5.01},
        {"t": "BDX", "p": 0.17, "c": 370.34},
        {"t": "PH", "p": 0.17, "c": 31.23},
        {"t": "FXI CALL", "p": 0.17, "c": 43.53},
        {"t": "ADSK", "p": 0.16, "c": 6463.92},
        {"t": "HUBS", "p": 0.16, "c": 566.12},
        {"t": "IBIT", "p": 0.16, "c": -47.86},
        {"t": "TLT CALL", "p": 0.16, "c": 131.80},
        {"t": "ANSS", "p": 0.16, "c": -0.22},
        {"t": "AMD CALL", "p": 0.16, "c": -12.02},
        {"t": "AMZN", "p": 0.16, "c": 29.16},
        {"t": "HON", "p": 0.15, "c": 178.31},
        {"t": "UNP", "p": 0.15, "c": 89.20},
        {"t": "GPN", "p": 0.15, "c": 66.44},
        {"t": "CRH", "p": 0.15, "c": -65.45},
        {"t": "CMG", "p": 0.14, "c": 215.08}
    ],
    
    "mar_31_24": [
        {"t": "SPY", "p": 1.06, "c": -18.13},
        {"t": "SPY CALL", "p": 0.98, "c": -39.00},
        {"t": "IVV", "p": 0.84, "c": -69.00},
        {"t": "AMZN", "p": 0.73, "c": 31.99},
        {"t": "AAPL CALL", "p": 0.67, "c": -3.97},
        {"t": "MSFT CALL", "p": 0.63, "c": -21.47},
        {"t": "META CALL", "p": 0.58, "c": -43.40},
        {"t": "NVDA CALL", "p": 0.56, "c": -31.54},
        {"t": "MRK", "p": 0.55, "c": 66.49},
        {"t": "AAPL", "p": 0.54, "c": 31.10},
        {"t": "NVDA", "p": 0.50, "c": -34.90},
        {"t": "META", "p": 0.49, "c": 21.19},
        {"t": "AMZN CALL", "p": 0.49, "c": -29.39},
        {"t": "MSFT", "p": 0.49, "c": -46.02},
        {"t": "CRH", "p": 0.46, "c": 71.67},
        {"t": "KKR", "p": 0.38, "c": -2.30},
        {"t": "PXD", "p": 0.37, "c": 0.05},
        {"t": "IBIT", "p": 0.35, "c": "New"},
        {"t": "GOOGL", "p": 0.34, "c": -14.57},
        {"t": "FBTC", "p": 0.33, "c": "New"},
        {"t": "GOOGL CALL", "p": 0.31, "c": -21.13},
        {"t": "TSLA CALL", "p": 0.31, "c": -18.50},
        {"t": "LLY", "p": 0.26, "c": 9.22},
        {"t": "CRM", "p": 0.26, "c": 35.47},
        {"t": "BSX", "p": 0.25, "c": 28.66},
        {"t": "HES", "p": 0.24, "c": 26.49},
        {"t": "EEM CALL", "p": 0.24, "c": 129.30},
        {"t": "GOOG", "p": 0.22, "c": -25.45},
        {"t": "WDAY", "p": 0.22, "c": 38.77},
        {"t": "AVGO", "p": 0.21, "c": 255.14},
        {"t": "ADBE", "p": 0.20, "c": 416.94},
        {"t": "SPGI", "p": 0.20, "c": 78.18},
        {"t": "CVE", "p": 0.19, "c": 40.42},
        {"t": "AMD CALL", "p": 0.19, "c": -29.88},
        {"t": "GLD CALL", "p": 0.18, "c": 144.17},
        {"t": "LNG", "p": 0.18, "c": 14.49},
        {"t": "APO", "p": 0.18, "c": -8.77},
        {"t": "WMT", "p": 0.18, "c": 34.24},
        {"t": "AVGO CALL", "p": 0.17, "c": -15.88},
        {"t": "MMM", "p": 0.17, "c": 416.36},
        {"t": "NOW", "p": 0.17, "c": 728.43},
        {"t": "C", "p": 0.17, "c": -2.67},
        {"t": "MA", "p": 0.17, "c": -13.70},
        {"t": "ANSS", "p": 0.16, "c": 757.42},
        {"t": "ISRG", "p": 0.16, "c": -21.17},
        {"t": "ELV", "p": 0.15, "c": -5.74},
        {"t": "TGT", "p": 0.15, "c": 123.55},
        {"t": "DDOG", "p": 0.15, "c": 236.76},
        {"t": "MCK", "p": 0.15, "c": 14.81},
        {"t": "GM", "p": 0.15, "c": -2.98},
        {"t": "T", "p": 0.15, "c": -11.08},
        {"t": "SCHW", "p": 0.14, "c": 469.67},
        {"t": "SHEL", "p": 0.14, "c": 21.21},
        {"t": "BP", "p": 0.14, "c": 19.57},
        {"t": "NDAQ", "p": 0.14, "c": -10.19},
        {"t": "NFLX", "p": 0.14, "c": 15.14},
        {"t": "WDC", "p": 0.13, "c": -54.48},
        {"t": "XOM CALL", "p": 0.13, "c": -6.25},
        {"t": "INTC", "p": 0.13, "c": 6.07}
    ]

}


# In[81]:


import math
import numpy as np
import pandas as pd

# Liste des dictionnaires à traiter
fund_dicts = {
    "Millennium": Millennium,
    "Point72": Point72,
    "Third_Point": Third_Point,
    "Coatue": Coatue,
    "Tiger": Tiger
}

def calculate_scores(date_data):
    # Convertir les données en DataFrame pour faciliter le calcul
    df = pd.DataFrame(date_data)
    
    # Prétraiter les valeurs de c pour gérer les valeurs "new"
    # Convertir toutes les valeurs numériques en nombres flottants
    # et marquer les valeurs "new" avec un indicateur spécial
    df['c_numeric'] = df['c'].apply(lambda x: float(x) if isinstance(x, (int, float)) or (isinstance(x, str) and x.replace('.', '', 1).replace('-', '', 1).isdigit()) else -9999)
    df['is_new'] = df['c'].apply(lambda x: isinstance(x, str) and x.lower() == "new")
    
    # Extraire seulement les valeurs c positives pour la formule du percentrank
    positive_c_values = [math.log(c+1) for c in df['c_numeric'] if c > 0]
    
    # Calculer le score basé sur c
    def calc_c_score(row):
        if row['is_new']:
            # Attribuer le score le plus élevé aux valeurs "new"
            return 100
        
        c_value = row['c_numeric']
        if c_value <= 0:
            return 0
        
        # Calculer le rang percentile
        log_c = math.log(c_value + 1)
        if not positive_c_values:  # Si aucune valeur positive, renvoyer 0
            return 0
        rank = sum(1 for v in positive_c_values if v <= log_c) / len(positive_c_values)
        return rank * 100
    
    # Calculer le score basé sur p
    max_p = max(df['p']) if not df.empty else 1
    
    def calc_p_score(p_value):
        return math.log(p_value * 100 + 1) / math.log(max_p * 100 + 1) * 100
    
    # Appliquer les calculs
    df['c_score'] = df.apply(calc_c_score, axis=1)
    df['p_score'] = df['p'].apply(calc_p_score)
    
    # VERY IMPOOOOORTANNNNNTTTTT Score total avec pondération 40/60
    df['total_score'] = (0.6 * df['c_score'] + 0.4 * df['p_score'])
    
    # Trier par score total décroissant
    df = df.sort_values('total_score', ascending=False)
    
    return df[['t', 'p', 'c', 'c_score', 'p_score', 'total_score']].head(10)
                                                       

# Parcourir tous les dictionnaires de fonds
for fund_name, fund_dict in fund_dicts.items():
    print(f"\n{'='*80}\n{fund_name.upper()}\n{'='*80}\n")
    
    # Vérifier si le dictionnaire est vide
    if not fund_dict:
        print(f"Aucune donnée disponible pour {fund_name}\n")
        continue
    
    # Parcourir chaque date dans ce dictionnaire de fond
    for date in fund_dict.keys():
        # Vérifier si les données pour cette date sont vides
        if not fund_dict[date]:
            print(f"Aucune donnée disponible pour {fund_name} à la date {date}\n")
            continue
        
        print(f"Top 20 pour {date}:")
        try:
            scores = calculate_scores(fund_dict[date])
            print(scores.to_string(index=False))
        except Exception as e:
            print(f"Erreur lors du calcul des scores: {e}")
        
        print("\n" + "-"*80 + "\n")


# In[82]:


import pandas as pd
import numpy as np
import math
import re
import datetime
 
fund_dicts = {
    "Millennium": Millennium,
    "Point72": Point72,
    "Third_Point": Third_Point,
    "Coatue": Coatue,
    "Tiger": Tiger
}

# Define the fund allocation percentages
fund_allocations = {
    "Millennium": 22.44,
    "Point72": 19.46,
    "Third_Point": 14.54,
    "Coatue": 22.16,
    "Tiger": 21.41
}

def calculate_scores(date_data):
    # Convertir les données en DataFrame pour faciliter le calcul
    df = pd.DataFrame(date_data)
    if df.empty:
        return pd.DataFrame(columns=['t', 'p', 'c', 'c_score', 'p_score', 'total_score'])
    

    df['c_numeric'] = df['c'].apply(lambda x: float(x) if isinstance(x, (int, float)) or (isinstance(x, str) and x.replace('.', '', 1).replace('-', '', 1).isdigit()) else -9999)
    df['is_new'] = df['c'].apply(lambda x: isinstance(x, str) and x.lower() == "new")
    
    # Extraire seulement les valeurs c positives pour la formule du percentrank
    positive_c_values = [math.log(c+1) for c in df['c_numeric'] if c > 0]
    
    # Calculer le score basé sur c
    def calc_c_score(row):
        if row['is_new']:
            # Attribuer le score le plus élevé aux valeurs "new"
            return 100
        
        c_value = row['c_numeric']
        if c_value <= 0:
            return 0
        
        # Calculer le rang percentile
        log_c = math.log(c_value + 1)
        if not positive_c_values:  # Si aucune valeur positive, renvoyer 0
            return 0
        rank = sum(1 for v in positive_c_values if v <= log_c) / len(positive_c_values)
        return rank * 100
    
    # Calculer le score basé sur p
    max_p = max(df['p']) if not df.empty else 1
    
    def calc_p_score(p_value):
        return math.log(p_value * 100 + 1) / math.log(max_p * 100 + 1) * 100
    
    # Appliquer les calculs
    df['c_score'] = df.apply(calc_c_score, axis=1)
    df['p_score'] = df['p'].apply(calc_p_score)
    
    # FUCKING Important !!!!! Score total avec pondération 40/60
    df['total_score'] = (0.9 * df['c_score'] + 0.1 * df['p_score'])
    
    # Trier par score total décroissant
    df = df.sort_values('total_score', ascending=False)
    
    return df[['t', 'p', 'c', 'c_score', 'p_score', 'total_score']]

# Fonction pour convertir le format de date en objet datetime
def parse_date(date_str):
    # Format: 'jun_30_24'
    months = {
        'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6,
        'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12
    }
    
    match = re.match(r'(\w+)_(\d+)_(\d+)', date_str)
    if match:
        month, day, year = match.groups()
        month_num = months.get(month.lower(), 1)
        return datetime.datetime(2000 + int(year), month_num, int(day))
    return datetime.datetime(2000, 1, 1)  # Date par défaut

# Création du portefeuille modèle
def create_model_portfolio():
    # Collecter toutes les dates uniques, toutes sources confondues
    all_dates = set()
    for fund_dict in fund_dicts.values():
        all_dates.update(fund_dict.keys())
    
    # Convertir et trier les dates
    sorted_dates = sorted(all_dates, key=parse_date, reverse=True)
    
    # Pour chaque date, créer un portefeuille combiné
    model_portfolios = {}
    
    for date in sorted_dates:
        # Pour cette date, collecter les top 6 actions de chaque fonds
        top_picks = []
        
        for fund_name, fund_dict in fund_dicts.items():
            if date in fund_dict and fund_dict[date]:
                scores = calculate_scores(fund_dict[date])
                if not scores.empty:
                    # Prendre les 6 meilleures actions et créer une COPIE
                    top_6_copy = scores.head(6).copy()
                    # Ajouter le nom du fonds sur la copie
                    top_6_copy['fund'] = fund_name
                    top_picks.append(top_6_copy)
        
        if top_picks:
            # Combiner tous les top picks pour cette date
            combined_picks = pd.concat(top_picks, ignore_index=True)
            
            # Supprimer les doublons éventuels (garder le plus haut score)
            combined_picks = combined_picks.sort_values('total_score', ascending=False).drop_duplicates('t')
            
            # Créer le portefeuille modèle pour cette date
            model_portfolios[date] = combined_picks
    
    return model_portfolios, sorted_dates

# Création et affichage du portefeuille modèle
model_portfolios, sorted_dates = create_model_portfolio()

# Dictionary to store portfolio weights by quarter
quarter_portfolios = {}

# Map month numbers to quarter names in French
def get_quarter_name(date_obj):
    period_name = {
        1: "mars", 2: "mars", 3: "mars",
        4: "juin", 5: "juin", 6: "juin",
        7: "septembre", 8: "septembre", 9: "septembre",
        10: "décembre", 11: "décembre", 12: "décembre"
    }
    period_name = period_name[date_obj.month]
    year = date_obj.year
    return f"{period_name}_{year}"

# Afficher les résultats pour chaque date
print("\n\nPORTEFEUILLES MODÈLES\n" + "="*80)

for date in sorted_dates:
    if date in model_portfolios:
        print(f"\nPortefeuille modèle pour {date}:")
        
        # Get the full portfolio and take only top 15 by total_score
        portfolio = model_portfolios[date].sort_values('total_score', ascending=False).head(15)
        
        # Calculer la répartition selon l'allocation spécifiée pour chaque fund
        portfolio_display = portfolio.copy()
        
        # Créer un dictionnaire pour stocker le nombre d'actions par fonds
        fund_stocks = portfolio['fund'].value_counts().to_dict()
        
        # Attribuer un poids à chaque action en fonction de son fonds
        def assign_weight(row):
            fund = row['fund']
            allocation = fund_allocations[fund]
            # Répartir l'allocation du fonds équitablement entre ses actions
            return allocation / fund_stocks[fund]
        
        # Appliquer les pondérations
        portfolio_display['weight'] = portfolio_display.apply(assign_weight, axis=1)
        
        # Normalize the weights to ensure they sum to 100%
        total_weight = portfolio_display['weight'].sum()
        portfolio_display['weight'] = portfolio_display['weight'] / total_weight * 100
        
        # Store the weights in the quarter portfolios dictionary
        date_obj = parse_date(date)
        quarter_key = get_quarter_name(date_obj)
        
        if quarter_key not in quarter_portfolios:
            quarter_portfolios[quarter_key] = {}
        
        for _, row in portfolio_display.iterrows():
            ticker = row['t']
            weight = row['weight']
            quarter_portfolios[quarter_key][ticker] = round(weight, 6)
        
        # Afficher le portefeuille avec poids
        display_cols = ['t', 'fund', 'total_score', 'weight']
        print(portfolio_display[display_cols].to_string(index=False))
        
        # Compter le nombre d'actions par fonds
        total_stocks = len(portfolio)
        fund_counts = portfolio['fund'].value_counts()
        print("\nRépartition par fonds:")
        for fund, count in fund_counts.items():
            print(f"{fund}: {count} actions")
        
        print(f"\nTotal: {total_stocks} actions")
        print(f"Somme des poids: {portfolio_display['weight'].sum():.2f}%")
        print("\n" + "-"*80)

# Print the quarter portfolios dictionary
print("\nQuarter-based Portfolio Dictionary:")
print(quarter_portfolios)


# In[ ]:





# In[11]:


import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime as dt
from matplotlib.dates import DateFormatter
import matplotlib.ticker as mtick
import warnings
warnings.filterwarnings('ignore')

# Configuration des dates et allocations
start_date = '2024-03-30'  
end_date = '2025-03-01'
historical_start = '2023-09-01'  # Date antérieure pour obtenir des données historiques

rebalance_dates = {
    'mars_2024': '2024-03-30',
    'juin_2024': '2024-06-30',
    'septembre_2024': '2024-09-30',
    'décembre_2024': '2024-12-30'
}

portfolios = {
    'décembre_2024': {
        'AMZN': 6.486018, 
        'RDDT': 5.539446, 
        'TEAM': 5.539446, 
        'TDS': 2.423091, 
        'TMO': 2.423091, 
        'COF': 2.423091, 
        'NOW': 5.539446, 
        'FTV': 2.423091, 
        'IWB': 22.437756, 
        'SPOT': 21.407859, 
        'WDAY': 2.423091, 
        'T': 6.486018, 
        'DIS': 6.486018, 
        'SCHW': 5.539446, 
        'DFS': 2.423091
    }, 
    'septembre_2024': {
        'BN': 2.907709, 
        'FLUT': 10.70393, 
        'CRH': 2.907709, 
        'CDNS': 3.692964, 
        'KKR': 3.692964, 
        'JD': 3.692964, 
        'LPLA': 2.907709, 
        'DASH': 3.692964, 
        'SPOT': 3.692964, 
        'CRS': 2.907709, 
        'TSLA': 2.907709, 
        'CMG': 3.692964, 
        'CPAY': 10.70393, 
        'GOOGL': 19.458054, 
        'BABA': 22.437756
    }, 
    'juin_2024': {
        'CEG': 14.283873, 
        'AAPL': 3.12406, 
        'UNH': 9.200292, 
        'GEV': 14.283873, 
        'APH': 3.12406, 
        'COP': 6.271755, 
        'CMCSA': 6.271755, 
        'UBER': 3.12406, 
        'KBH': 3.12406, 
        'TER': 6.271755, 
        'GPN': 6.271755, 
        'ROP': 3.12406, 
        'LYV': 3.12406, 
        'QCOM': 9.200292, 
        'GRAB': 9.200292
    }, 
    'mars_2024': {
        'AVGO': 8.252757, 
        'GOOGL': 3.699746, 
        'QCOM': 5.638677, 
        'EW': 8.252757, 
        'PYPL': 5.638677, 
        'DELL': 5.638677, 
        'IBIT': 14.274809, 
        'FBTC': 14.274809, 
        'CEG': 5.638677, 
        'SPGI': 3.699746, 
        'ICE': 3.699746, 
        'ZBRA': 8.252757, 
        'AAP': 3.699746, 
        'MRVL': 3.699746, 
        'TSM': 5.638677
    }
}



# Récupérer tous les tickers uniques pour minimiser le nombre d'appels à yfinance
all_tickers = set()
for portfolio in portfolios.values():
    all_tickers.update(portfolio.keys())
all_tickers_list = list(all_tickers) + ['SPY']  # Ajout du benchmark

# Télécharger les données historiques
def download_all_data(tickers, start_date, end_date):
    print(f"Téléchargement des données pour {len(tickers)} titres...")
    data = yf.download(tickers, start=start_date, end=end_date, auto_adjust=True)
    print("Téléchargement terminé.")
    
    # Vérifier les données manquantes
    missing_tickers = []
    for ticker in tickers:
        if ticker not in data['Close'].columns:
            missing_tickers.append(ticker)
    
    if missing_tickers:
        print(f"Données manquantes pour: {missing_tickers}")
        
        # Tenter de télécharger à nouveau les données manquantes individuellement
        for ticker in missing_tickers:
            try:
                ticker_alt = ticker+"-USD" if ticker in ["IBIT", "FBTC", "GEV"] else ticker
                ticker_data = yf.download(ticker_alt, start=start_date, end=end_date)
                if not ticker_data.empty:
                    # Si c'est une série (une seule action), la transformer en DataFrame
                    if isinstance(data['Close'], pd.Series):
                        tmp_df = pd.DataFrame(data['Close'])
                        data['Close'] = tmp_df
                    
                    # Si le téléchargement réussit, ajouter les données
                    data['Close'][ticker] = ticker_data['Adj Close']
                    data['Volume'][ticker] = ticker_data['Volume']
                    print(f"Données récupérées pour {ticker} (utilisant {ticker_alt})")
                else:
                    print(f"Impossible de récupérer les données pour {ticker}")
            except Exception as e:
                print(f"Erreur avec {ticker}: {e}")
    
    return data

# Télécharger les données historiques jusqu'à aujourd'hui
today = pd.Timestamp.today().strftime('%Y-%m-%d')
stock_data = download_all_data(all_tickers_list, historical_start, today)

# Vérifier les données manquantes et créer des séries simulées
all_missing = []
for ticker in all_tickers_list:
    if ticker not in stock_data['Close'].columns:
        all_missing.append(ticker)
        
print(f"Actions sans données: {len(all_missing)}/{len(all_tickers_list)}")

# Simuler les données manquantes à partir du benchmark
if 'SPY' in stock_data['Close'].columns:
    spy_data = stock_data['Close']['SPY']
    spy_returns = spy_data.pct_change()
else:
    # Si SPY ne peut pas être téléchargé, créer une série simulée
    print("SPY manquant, création d'une série synthétique...")
    index_range = pd.date_range(start=historical_start, end=today)
    spy_returns = pd.Series(np.random.normal(0.0003, 0.01, len(index_range)), index=index_range)
    spy_data = 100 * (1 + spy_returns).cumprod()

# Créer des données simulées pour les actions manquantes
for ticker in all_missing:
    print(f"Création de données simulées pour {ticker}...")
    # Partir du benchmark avec un facteur aléatoire
    beta = 0.8 + np.random.random() * 0.4  # Beta entre 0.8 et 1.2
    alpha = -0.0001 + np.random.random() * 0.0002  # Alpha quotidien entre -0.01% et 0.01%
    
    # Simuler des rendements
    simulated_returns = alpha + beta * spy_returns + np.random.normal(0, 0.01, len(spy_returns))
    
    # Simuler les prix à partir des rendements
    initial_price = 50 + np.random.random() * 150  # Prix initial aléatoire
    simulated_prices = initial_price * (1 + simulated_returns).cumprod()
    
    # Ajouter au DataFrame
    stock_data['Close'][ticker] = simulated_prices
    stock_data['Volume'][ticker] = np.random.randint(100000, 5000000, size=len(simulated_prices))

# Projection des prix vers le futur
simulation_end = pd.to_datetime(end_date)
today_dt = pd.to_datetime(today)

# Si la date de fin est dans le futur, créer des projections
if today_dt < simulation_end:
    print(f"Création de projections du {today} au {end_date}...")
    
    # Créer un index continu incluant la période future
    full_dates = pd.date_range(start=stock_data.index[0], end=simulation_end, freq='B')
    
    # Préparer les données complètes
    full_data = pd.DataFrame(index=full_dates)
    
    # Isoler les prix de clôture pour simplifier
    close_data = stock_data['Close'].copy()
    
    # Joindre les données historiques
    full_data = full_data.join(close_data)
    
    # Calculer les moyennes et écarts-types des rendements
    returns_mean = close_data.pct_change().mean()
    returns_std = close_data.pct_change().std()
    
    # Projeter les prix futurs
    future_dates = full_dates[full_dates > today_dt]
    if len(future_dates) > 0:
        print(f"Projection de {len(future_dates)} jours de trading...")
        
        for ticker in all_tickers_list:
            # Récupérer le dernier prix connu
            last_known_idx = close_data.index[close_data.index <= today_dt][-1]
            last_price = close_data.loc[last_known_idx, ticker]
            
            # Paramètres de simulation
            if pd.isna(returns_mean[ticker]) or pd.isna(returns_std[ticker]):
                mu = 0.0003  # Rendement quotidien moyen (~7.5% annualisé)
                sigma = 0.015  # Volatilité quotidienne
            else:
                mu = returns_mean[ticker]
                sigma = returns_std[ticker]
            
            # Simuler les rendements futurs
            future_returns = np.random.normal(mu, sigma, size=len(future_dates))
            future_prices = last_price * np.cumprod(1 + future_returns)
            
            # Mettre à jour le DataFrame
            full_data.loc[future_dates, ticker] = future_prices
    
    # Remplacer les données originales par les données complètes
    stock_data['Close'] = full_data

# Calcul de la performance du portefeuille
print("Calcul de la performance du portefeuille...")

# Convertir les dates de rebalancement en objets datetime
rebalance_dates_dt = {key: pd.to_datetime(date) for key, date in rebalance_dates.items()}
sorted_rebalance_periods = sorted(rebalance_dates_dt.items(), key=lambda x: x[1])

# Initialiser un DataFrame pour stocker la performance
performance = pd.DataFrame(index=stock_data.index, columns=['Value', 'Return'])
performance['Value'] = 0

# Capital initial (100 = 100%)
initial_capital = 100
current_capital = initial_capital

# Calculer la performance pour chaque période
for i, (period_name, rebalance_date) in enumerate(sorted_rebalance_periods):
    print(f"Traitement de la période {period_name}...")
    
    # Trouver la date de fin de cette période
    if i < len(sorted_rebalance_periods) - 1:
        end_period_date = sorted_rebalance_periods[i + 1][1] - pd.Timedelta(days=1)
    else:
        end_period_date = simulation_end
    
    # Sélectionner les dates dans cette période
    period_mask = (stock_data.index >= rebalance_date) & (stock_data.index <= end_period_date)
    period_dates = stock_data.index[period_mask]
    
    if len(period_dates) == 0:
        print(f"Aucune date trouvée pour la période {period_name}")
        continue
    
    # Allocation du portefeuille pour cette période
    portfolio_allocation = portfolios[period_name]
    
    # Obtenir les prix à la date de rebalancement
    rebalance_idx = period_dates[0]
    prices_at_rebalance = stock_data['Close'].loc[rebalance_idx]
    
    # Calculer le nombre d'unités de chaque action
    holdings = {}
    for ticker, weight in portfolio_allocation.items():
        if ticker in stock_data['Close'].columns:
            rebalance_price = prices_at_rebalance[ticker]
            if not pd.isna(rebalance_price) and rebalance_price > 0:
                # Montant alloué à cet actif
                allocation_amount = (weight / 100) * current_capital
                # Nombre d'unités
                holdings[ticker] = allocation_amount / rebalance_price
    
    # Calculer la valeur du portefeuille pour chaque jour de la période
    for date in period_dates:
        daily_value = 0
        for ticker, units in holdings.items():
            current_price = stock_data['Close'].loc[date, ticker]
            if not pd.isna(current_price):
                daily_value += units * current_price
        
        performance.loc[date, 'Value'] = daily_value
    
    # Mettre à jour le capital pour la prochaine période
    if i < len(sorted_rebalance_periods) - 1:
        last_period_date = period_dates[-1]
        current_capital = performance.loc[last_period_date, 'Value']

# Remplir les valeurs manquantes et calculer les rendements
performance['Value'] = performance['Value'].fillna(method='ffill')
performance['Return'] = performance['Value'] / initial_capital - 1

# Filtrer pour ne garder que les dates à partir du début demandé
performance = performance[performance.index >= pd.to_datetime(start_date)]

# Visualisation
plt.figure(figsize=(16, 8))

# Tracer la performance du portefeuille
plt.plot(performance.index, performance['Return'] * 100, linewidth=2, color='#0066cc')

# Ajouter des lignes verticales pour les dates de rebalancement
for period_name, date in rebalance_dates_dt.items():
    rebalance_date = pd.to_datetime(date)
    if rebalance_date in performance.index or (rebalance_date >= performance.index[0] and rebalance_date <= performance.index[-1]):
        plt.axvline(x=rebalance_date, color='crimson', linestyle='--', alpha=0.7)
        # Position du texte
        y_pos = min(performance['Return'].max() * 100 * 0.95, 20)
        plt.text(rebalance_date, y_pos, f"Rebalancement\n{period_name}", 
                 rotation=90, va='top', ha='right', color='darkred',
                 bbox=dict(facecolor='white', alpha=0.7, boxstyle='round,pad=0.3'))

# Améliorer l'apparence du graphique
plt.title('Performance du Fonds avec Rebalancements Trimestriels', fontsize=18, pad=20)
plt.xlabel('Date', fontsize=14)
plt.ylabel('Rendement (%)', fontsize=14)
plt.grid(True, alpha=0.3, linestyle='--')

# Limiter le graphique jusqu'à février 2025
end_chart_date = pd.to_datetime('2025-02-28')
chart_end = min(end_chart_date, performance.index[-1])
plt.xlim(performance.index[0], chart_end)

# Set y-axis range to -50 to 50
plt.ylim(-50, 50)

# Format de l'axe Y en pourcentage
plt.gca().yaxis.set_major_formatter(mtick.PercentFormatter())

# Ajouter le S&P 500 comme référence si disponible
try:
    spy_filtered = stock_data['Close']['SPY']
    spy_filtered = spy_filtered[spy_filtered.index >= pd.to_datetime(start_date)]
    spy_filtered = spy_filtered[spy_filtered.index <= pd.to_datetime(end_date)]  # Limiter aussi le S&P 500
    spy_return = spy_filtered / spy_filtered.iloc[0] - 1
    plt.plot(spy_filtered.index, spy_return * 100, '--', linewidth=1.5, color='gray', alpha=0.7, label='S&P 500')
    plt.legend(loc='upper left')
except:
    print("Impossible d'ajouter la référence S&P 500")

# Calculer les statistiques de performance jusqu'à la date de fin du graphique
end_date_str = chart_end.strftime('%Y-%m-%d')
performance_filtered = performance[performance.index <= chart_end]
final_return = performance_filtered['Return'].iloc[-1] * 100
annualized_factor = 365 / (performance_filtered.index[-1] - performance_filtered.index[0]).days
annualized_return = ((1 + performance_filtered['Return'].iloc[-1]) ** annualized_factor - 1) * 100

plt.figtext(0.15, 0.02, info_text, ha="left", fontsize=12, 
           bbox={"facecolor":"lightblue", "alpha":0.8, "pad":5, "boxstyle":"round,pad=0.5"})

# Afficher le graphique
plt.tight_layout()
plt.savefig('performance_fonds.png', dpi=800)
plt.show()

# Afficher la composition détaillée de chaque portefeuille
print("\n===== COMPOSITION DES PORTEFEUILLES =====")
for period_name, allocation in portfolios.items():
    print(f"\nPortefeuille {period_name}:")
    
    # Trier par poids décroissant
    sorted_allocation = {k: v for k, v in sorted(allocation.items(), key=lambda item: item[1], reverse=True)}
    
    # Créer un tableau formaté
    print(f"{'Action':<8} | {'Poids (%)':<10}")
    print("-" * 21)
    
    for ticker, weight in sorted_allocation.items():
        print(f"{ticker:<8} | {weight:<10.2f}")
    
    # Afficher le total
    print("-" * 21)
    print(f"{'TOTAL':<8} | {sum(sorted_allocation.values()):<10.2f}")


# In[16]:


pip install 


# In[18]:


import yfinance as yf
yf.__version__


# In[ ]:





# <div style="font-size: 10px; color: #666; text-align: right;">This notebook was converted with <a href="https://convert.ploomber.io">convert.ploomber.io</a></div>
